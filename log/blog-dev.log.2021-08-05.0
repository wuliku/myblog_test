2021-08-05 09:32:32.830  INFO 10140 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on LAPTOP-D9PU3479 with PID 10140 (E:\JavaProject\myblog-mybatis-master\target\classes started by admin in E:\JavaProject\myblog-mybatis-master)
2021-08-05 09:32:32.838 DEBUG 10140 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2021-08-05 09:32:32.838  INFO 10140 --- [restartedMain] com.star.MyblogApplication               : The following profiles are active: dev
2021-08-05 09:32:32.894  INFO 10140 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-08-05 09:32:32.895  INFO 10140 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-08-05 09:32:33.904  INFO 10140 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-08-05 09:32:33.910  INFO 10140 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-08-05 09:32:33.910  INFO 10140 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-08-05 09:32:33.971  INFO 10140 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-08-05 09:32:33.971  INFO 10140 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1076 ms
2021-08-05 09:32:34.513  INFO 10140 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-08-05 09:32:34.587  INFO 10140 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-08-05 09:32:34.873  INFO 10140 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-08-05 09:32:34.910  INFO 10140 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-08-05 09:32:34.912  INFO 10140 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.496 seconds (JVM running for 3.397)
2021-08-05 09:32:51.558  INFO 10140 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-08-05 09:32:51.558  INFO 10140 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-08-05 09:32:51.567  INFO 10140 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2021-08-05 09:32:51.596  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-05 09:32:51.614  INFO 10140 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-08-05 09:32:51.721  INFO 10140 --- [http-nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-08-05 09:32:51.752 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-05 09:32:51.770 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-05 09:32:51.787 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-05 09:32:51.789 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-05 09:32:51.789 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 10(Integer)
2021-08-05 09:32:51.792 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 4
2021-08-05 09:32:51.794 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-05 09:32:51.794 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-05 09:32:51.796 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-05 09:32:51.798  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index
2021-08-05 09:32:52.219  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:32:52.220 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:32:52.221 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:32:52.225 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:32:52.226 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:32:52.227 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:32:52.228 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:32:52.229 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:32:52.229 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:32:52.231 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:32:52.232 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:32:52.232 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:32:52.234 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:32:52.235  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:33:03.913  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.search', args=[{}, 1, 简单介绍]}
2021-08-05 09:33:03.928 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getSearchBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND (b.title LIKE ? OR b.content LIKE ?) 
2021-08-05 09:33:03.928 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getSearchBlog_COUNT   : ==> Parameters: %简单介绍%(String), %简单介绍%(String)
2021-08-05 09:33:03.930 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getSearchBlog_COUNT   : <==      Total: 1
2021-08-05 09:33:03.930  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : search
2021-08-05 09:33:03.975  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:33:03.975 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:33:03.975 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:33:03.977 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:33:03.978 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:33:03.978 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:33:03.980 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:33:03.980 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:33:03.981 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:33:03.982 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:33:03.983 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:33:03.983 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:33:03.986 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:33:03.987  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:33:15.122  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.search', args=[{}, 1, 区块链]}
2021-08-05 09:33:15.125 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getSearchBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND (b.title LIKE ? OR b.content LIKE ?) 
2021-08-05 09:33:15.125 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getSearchBlog_COUNT   : ==> Parameters: %区块链%(String), %区块链%(String)
2021-08-05 09:33:15.126 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getSearchBlog_COUNT   : <==      Total: 1
2021-08-05 09:33:15.127 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getSearchBlog       : ==>  Preparing: select b.id,b.title,b.first_picture, b.views,b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and (b.title like ? or b.content like ?) order by b.update_time desc LIMIT ? 
2021-08-05 09:33:15.127 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getSearchBlog       : ==> Parameters: %区块链%(String), %区块链%(String), 1000(Integer)
2021-08-05 09:33:15.129 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getSearchBlog       : <==      Total: 3
2021-08-05 09:33:15.130  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : search
2021-08-05 09:33:15.169  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:33:15.170 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:33:15.170 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:33:15.172 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:33:15.172 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:33:15.173 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:33:15.175 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:33:15.176 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:33:15.177 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:33:15.178 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:33:15.179 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:33:15.180 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:33:15.181 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:33:15.182  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:33:35.309  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/search', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.search', args=[{}, 1, 区块链的介绍]}
2021-08-05 09:33:35.313 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getSearchBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND (b.title LIKE ? OR b.content LIKE ?) 
2021-08-05 09:33:35.314 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getSearchBlog_COUNT   : ==> Parameters: %区块链的介绍%(String), %区块链的介绍%(String)
2021-08-05 09:33:35.315 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getSearchBlog_COUNT   : <==      Total: 1
2021-08-05 09:33:35.315 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getSearchBlog       : ==>  Preparing: select b.id,b.title,b.first_picture, b.views,b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and (b.title like ? or b.content like ?) order by b.update_time desc LIMIT ? 
2021-08-05 09:33:35.315 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getSearchBlog       : ==> Parameters: %区块链的介绍%(String), %区块链的介绍%(String), 1000(Integer)
2021-08-05 09:33:35.317 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getSearchBlog       : <==      Total: 1
2021-08-05 09:33:35.319  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : search
2021-08-05 09:33:35.358  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:33:35.358 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:33:35.358 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:33:35.360 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:33:35.361 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:33:35.361 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:33:35.362 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:33:35.362 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:33:35.362 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:33:35.364 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:33:35.365 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:33:35.365 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:33:35.366 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:33:35.367  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:37:35.870  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/64', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[64, {}]}
2021-08-05 09:37:35.871 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 09:37:35.872 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 64(Long)
2021-08-05 09:37:35.874 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 09:37:35.902 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 09:37:35.902 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==> Parameters: 64(Long)
2021-08-05 09:37:35.907 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 09:37:35.907 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 09:37:35.907 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 64(Long), 64(Long), 64(Long)
2021-08-05 09:37:35.908 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 09:37:35.910 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:37:35.910 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 64(Long), -1(Long)
2021-08-05 09:37:35.911 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2021-08-05 09:37:35.911  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog
2021-08-05 09:37:36.278  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:37:36.278 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:37:36.279 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:37:36.280 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:37:36.281 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:37:36.281 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:37:36.282 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:37:36.282 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:37:36.283 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:37:36.284 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:37:36.284 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:37:36.284 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:37:36.286 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:37:36.286  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:37:36.530  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/64', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[64, {}]}
2021-08-05 09:37:36.532 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:37:36.533 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 64(Long), -1(Long)
2021-08-05 09:37:36.533 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2021-08-05 09:37:36.534  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : blog :: commentList
2021-08-05 09:37:54.643  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.message', args=[]}
2021-08-05 09:37:54.646  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : message
2021-08-05 09:37:54.696  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:37:54.696 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:37:54.697 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:37:54.698 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:37:54.699 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:37:54.699 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:37:54.699 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:37:54.700 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:37:54.700 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:37:54.701 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:37:54.702 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:37:54.702 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:37:54.711 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:37:54.711  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:37:54.725  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/messagecomment', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.messages', args=[{}]}
2021-08-05 09:37:54.726 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.dao.MessageDao.findByParentIdNull    : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2021-08-05 09:37:54.727 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.dao.MessageDao.findByParentIdNull    : ==> Parameters: -1(Long)
2021-08-05 09:37:54.728 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.dao.MessageDao.findByParentIdNull    : <==      Total: 1
2021-08-05 09:37:54.729 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.MessageDao.findByParentIdNotNull   : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2021-08-05 09:37:54.729 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.MessageDao.findByParentIdNotNull   : ==> Parameters: 100(Long)
2021-08-05 09:37:54.730 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.MessageDao.findByParentIdNotNull   : <==      Total: 0
2021-08-05 09:37:54.730  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : message::messageList
2021-08-05 09:40:11.314  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-05 09:40:11.321 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 09:40:11.321 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 09:40:11.323 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 09:40:11.324 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 09:40:11.324 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-05 09:40:11.325 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 09:40:11.325  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : types
2021-08-05 09:40:11.377  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:40:11.377 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:40:11.377 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:40:11.379 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:40:11.379 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:40:11.379 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:40:11.380 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:40:11.380 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:40:11.381 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:40:11.382 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:40:11.383 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:40:11.383 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:40:11.385 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:40:11.386  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:40:14.265  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-05 09:40:14.267 DEBUG 10140 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-05 09:40:14.267 DEBUG 10140 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-05 09:40:14.268 DEBUG 10140 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-05 09:40:14.269 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-05 09:40:14.269 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 10(Integer)
2021-08-05 09:40:14.271 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 4
2021-08-05 09:40:14.272 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-05 09:40:14.272 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-05 09:40:14.273 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-05 09:40:14.273  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index
2021-08-05 09:40:14.339  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:40:14.339 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:40:14.340 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:40:14.341 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:40:14.342 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:40:14.342 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:40:14.343 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:40:14.344 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:40:14.344 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:40:14.346 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:40:14.346 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:40:14.347 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:40:14.348 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:40:14.348  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:44:48.953  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/62', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[62, {}]}
2021-08-05 09:44:48.954 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 09:44:48.954 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 62(Long)
2021-08-05 09:44:48.956 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 09:44:48.959 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 09:44:48.960 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 62(Long)
2021-08-05 09:44:48.963 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 09:44:48.963 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 09:44:48.964 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 62(Long), 62(Long), 62(Long)
2021-08-05 09:44:48.965 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 09:44:48.965 DEBUG 10140 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:44:48.966 DEBUG 10140 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 62(Long), -1(Long)
2021-08-05 09:44:48.966 DEBUG 10140 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2021-08-05 09:44:48.967  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2021-08-05 09:44:49.313  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:44:49.313 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:44:49.313 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:44:49.315 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:44:49.315 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:44:49.315 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:44:49.316 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:44:49.316 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:44:49.316 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:44:49.318 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:44:49.318 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:44:49.318 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:44:49.320 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:44:49.320  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:44:56.027  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[63, {}]}
2021-08-05 09:44:56.028 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 09:44:56.028 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 63(Long)
2021-08-05 09:44:56.031 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 09:44:56.032 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 09:44:56.033 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==> Parameters: 63(Long)
2021-08-05 09:44:56.036 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 09:44:56.036 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 09:44:56.036 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 63(Long), 63(Long), 63(Long)
2021-08-05 09:44:56.037 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 09:44:56.037 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:44:56.038 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-05 09:44:56.039 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-05 09:44:56.040 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:44:56.040 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-05 09:44:56.041 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-05 09:44:56.042 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:44:56.042 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-05 09:44:56.043 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-05 09:44:56.044 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:44:56.044 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-05 09:44:56.044 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 09:44:56.045  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog
2021-08-05 09:44:56.386  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:44:56.387 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:44:56.387 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:44:56.388 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:44:56.389 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:44:56.389 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:44:56.390 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:44:56.390 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:44:56.391 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:44:56.392 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:44:56.392 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:44:56.392 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:44:56.394 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:44:56.395  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:44:56.469  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[63, {}]}
2021-08-05 09:44:56.470 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:44:56.470 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-05 09:44:56.472 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-05 09:44:56.473 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:44:56.474 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-05 09:44:56.475 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-05 09:44:56.476 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:44:56.476 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-05 09:44:56.477 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-05 09:44:56.478 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:44:56.478 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-05 09:44:56.479 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 09:44:56.480  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : blog :: commentList
2021-08-05 09:45:05.480  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/62', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[62, {}]}
2021-08-05 09:45:05.482 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getDetailedBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_user u, myblog.t_type t WHERE b.user_id = u.id AND b.type_id = t.id AND b.id = ? 
2021-08-05 09:45:05.482 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getDetailedBlog_COUNT    : ==> Parameters: 62(Long)
2021-08-05 09:45:05.483 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getDetailedBlog_COUNT    : <==      Total: 1
2021-08-05 09:45:05.486 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: SELECT b.id bid, b.first_picture, b.flag, b.title, b.content, b.views, b.comment_count, b.update_time, b.commentabled, b.share_statement, b.appreciation, u.nickname, u.avatar, t.name FROM myblog.t_blog b, myblog.t_user u, myblog.t_type t WHERE b.user_id = u.id AND b.type_id = t.id AND b.id = ? order by desc LIMIT ? 
2021-08-05 09:45:05.487 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 62(Long), 10000(Integer)
2021-08-05 09:45:05.534 ERROR 10140 --- [http-nio-8080-exec-10] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/blog/62，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT b.id bid, b.first_picture, b.flag, b.title, b.content, b.views, b.comment_count, b.update_time, b.commentabled, b.share_statement, b.appreciation, u.nickname, u.avatar, t.name FROM myblog.t_blog b, myblog.t_user u, myblog.t_type t WHERE b.user_id = u.id AND b.type_id = t.id AND b.id = ? order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getDetailedBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getDetailedBlog(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getDetailedBlog(BlogServiceImpl.java:93)
	at com.star.controller.IndexController.blog(IndexController.java:74)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$135060bb.blog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 88 common frames omitted

2021-08-05 09:45:05.535  WARN 10140 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT b.id bid, b.first_picture, b.flag, b.title, b.content, b.views, b.comment_count, b.update_time, b.commentabled, b.share_statement, b.appreciation, u.nickname, u.avatar, t.name FROM myblog.t_blog b, myblog.t_user u, myblog.t_type t WHERE b.user_id = u.id AND b.type_id = t.id AND b.id = ? order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 09:45:07.142  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-05 09:45:07.143 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-05 09:45:07.144 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-05 09:45:07.144 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-05 09:45:07.145 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-05 09:45:07.145 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 10(Integer)
2021-08-05 09:45:07.147 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 4
2021-08-05 09:45:07.148 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-05 09:45:07.148 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-05 09:45:07.149 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-05 09:45:07.149  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index
2021-08-05 09:45:07.266  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:45:07.267 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:45:07.267 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:45:07.268 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:45:07.269 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:45:07.269 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:45:07.269 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:45:07.270 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:45:07.270 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:45:07.272 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:45:07.273 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:45:07.273 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:45:07.274 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:45:07.275  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:45:10.018  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/62', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[62, {}]}
2021-08-05 09:45:10.019 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 09:45:10.019 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 62(Long)
2021-08-05 09:45:10.021 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 09:45:10.022 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 09:45:10.023 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : ==> Parameters: 62(Long)
2021-08-05 09:45:10.026 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 09:45:10.026 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 09:45:10.027 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 62(Long), 62(Long), 62(Long)
2021-08-05 09:45:10.028 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 09:45:10.028 DEBUG 10140 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:45:10.028 DEBUG 10140 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 62(Long), -1(Long)
2021-08-05 09:45:10.029 DEBUG 10140 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2021-08-05 09:45:10.029  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog
2021-08-05 09:45:10.265  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:45:10.266 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:45:10.266 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:45:10.267 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:45:10.268 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:45:10.268 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:45:10.268 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:45:10.269 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:45:10.269 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:45:10.270 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:45:10.271 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:45:10.272 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:45:10.273 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:45:10.273  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:45:21.803  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/65', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[65, {}]}
2021-08-05 09:45:21.803 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 09:45:21.804 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 65(Long)
2021-08-05 09:45:21.805 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 09:45:21.807 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 09:45:21.807 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==> Parameters: 65(Long)
2021-08-05 09:45:21.810 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 09:45:21.810 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 09:45:21.811 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 65(Long), 65(Long), 65(Long)
2021-08-05 09:45:21.811 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 09:45:21.812 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:45:21.812 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 65(Long), -1(Long)
2021-08-05 09:45:21.812 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2021-08-05 09:45:21.813  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog
2021-08-05 09:45:22.042  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 09:45:22.043 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 09:45:22.043 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 09:45:22.044 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 09:45:22.045 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 09:45:22.045 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 09:45:22.046 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 09:45:22.046 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 09:45:22.046 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 09:45:22.047 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 09:45:22.048 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 09:45:22.048 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 09:45:22.049 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 09:45:22.050  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 09:45:22.222  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/65', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[65, {}]}
2021-08-05 09:45:22.222 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 09:45:22.222 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 65(Long), -1(Long)
2021-08-05 09:45:22.223 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2021-08-05 09:45:22.223  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : blog :: commentList
2021-08-05 10:04:20.403  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[63, {}]}
2021-08-05 10:04:20.405 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 10:04:20.405 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 63(Long)
2021-08-05 10:04:20.407 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 10:04:20.409 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 10:04:20.409 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateViews         : ==> Parameters: 63(Long)
2021-08-05 10:04:20.414 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 10:04:20.414 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 10:04:20.415 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 63(Long), 63(Long), 63(Long)
2021-08-05 10:04:20.416 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 10:04:20.417 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:04:20.417 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-05 10:04:20.418 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-05 10:04:20.418 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:04:20.418 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-05 10:04:20.419 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-05 10:04:20.419 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:04:20.419 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-05 10:04:20.419 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-05 10:04:20.420 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:04:20.420 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-05 10:04:20.421 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 10:04:20.421  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : blog
2021-08-05 10:04:20.762  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:04:20.762 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:04:20.762 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:04:20.764 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:04:20.764 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:04:20.764 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:04:20.765 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:04:20.765 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:04:20.765 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:04:20.766 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:04:20.767 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:04:20.767 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:04:20.768 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:04:20.768  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:04:20.842  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[63, {}]}
2021-08-05 10:04:20.842 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:04:20.843 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-05 10:04:20.845 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-05 10:04:20.845 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:04:20.845 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-05 10:04:20.847 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-05 10:04:20.847 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:04:20.848 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-05 10:04:20.849 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-05 10:04:20.849 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:04:20.849 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-05 10:04:20.850 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 10:04:20.851  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : blog :: commentList
2021-08-05 10:10:39.446  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/62', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[62, {}]}
2021-08-05 10:10:39.447 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 10:10:39.447 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 62(Long)
2021-08-05 10:10:39.450 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 10:10:39.451 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 10:10:39.452 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==> Parameters: 62(Long)
2021-08-05 10:10:39.455 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 10:10:39.456 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 10:10:39.456 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 62(Long), 62(Long), 62(Long)
2021-08-05 10:10:39.458 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 10:10:39.458 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:10:39.458 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 62(Long), -1(Long)
2021-08-05 10:10:39.459 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2021-08-05 10:10:39.459  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : blog
2021-08-05 10:10:39.686  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:10:39.686 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:10:39.686 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:10:39.688 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:10:39.688 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:10:39.688 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:10:39.689 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:10:39.689 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:10:39.689 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:10:39.691 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:10:39.691 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:10:39.691 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:10:39.693 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:10:39.693  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:12:41.183  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/65', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[65, {}]}
2021-08-05 10:12:41.184 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 10:12:41.184 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 65(Long)
2021-08-05 10:12:41.186 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 10:12:41.186 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 10:12:41.187 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==> Parameters: 65(Long)
2021-08-05 10:12:41.189 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 10:12:41.190 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 10:12:41.190 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 65(Long), 65(Long), 65(Long)
2021-08-05 10:12:41.191 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 10:12:41.192 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:12:41.192 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 65(Long), -1(Long)
2021-08-05 10:12:41.193 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2021-08-05 10:12:41.193  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : blog
2021-08-05 10:12:41.527  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:12:41.528 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:12:41.528 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:12:41.529 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:12:41.530 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:12:41.530 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:12:41.530 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:12:41.531 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:12:41.531 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:12:41.532 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:12:41.533 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:12:41.533 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:12:41.534 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:12:41.534  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:12:41.621  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/65', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[65, {}]}
2021-08-05 10:12:41.622 DEBUG 10140 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:12:41.622 DEBUG 10140 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 65(Long), -1(Long)
2021-08-05 10:12:41.623 DEBUG 10140 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2021-08-05 10:12:41.623  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog :: commentList
2021-08-05 10:16:17.905  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-05 10:16:17.906 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:16:17.906 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:16:17.908 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:16:17.909 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:16:17.909 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-05 10:16:17.911 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:16:17.911  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:16:17.958  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:17.958 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:16:17.958 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:16:17.960 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:16:17.960 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:16:17.960 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:16:17.961 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:16:17.961 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:16:17.961 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:16:17.963 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:16:17.964 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:16:17.964 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:16:17.966 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:16:17.966  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:16:23.879  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-05 10:16:23.879 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:16:23.880 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:16:23.881 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:16:23.881 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:16:23.881 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-05 10:16:23.882 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:16:23.883  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:16:23.948  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:23.948 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:16:23.949 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:16:23.950 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:16:23.951 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:16:23.951 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:16:23.953 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:16:23.953 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:16:23.953 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:16:23.955 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:16:23.956 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:16:23.956 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:16:23.958 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:16:23.958  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:16:24.553  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:16:24.553 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:16:24.553 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:16:24.555 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:16:24.555 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:16:24.555 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-05 10:16:24.557 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-05 10:16:24.557  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:16:24.633  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:24.633 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:16:24.634 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:16:24.637 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:16:24.638 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:16:24.638 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:16:24.640 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:16:24.641 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:16:24.642 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:16:24.644 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:16:24.644 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:16:24.644 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:16:24.646 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:16:24.646  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:16:25.268  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/60', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 60, {}]}
2021-08-05 10:16:25.269 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:16:25.269 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:16:25.270 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:16:25.270 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:16:25.270 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-05 10:16:25.271 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:16:25.271  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:16:25.315  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:25.316 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:16:25.316 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:16:25.317 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:16:25.317 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:16:25.317 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:16:25.318 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:16:25.318 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:16:25.318 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:16:25.320 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:16:25.320 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:16:25.320 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:16:25.321 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:16:25.321  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:16:25.876  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-05 10:16:25.877 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:16:25.877 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:16:25.878 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:16:25.879 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:16:25.879 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-05 10:16:25.880 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:16:25.880  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:16:25.932  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:25.933 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:16:25.933 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:16:25.936 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:16:25.936 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:16:25.936 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:16:25.938 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:16:25.939 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:16:25.939 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:16:25.941 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:16:25.942 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:16:25.943 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:16:25.945 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:16:25.945  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:16:26.528  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:16:26.529 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:16:26.529 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:16:26.530 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:16:26.531 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:16:26.531 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-05 10:16:26.532 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-05 10:16:26.532  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:16:26.574  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:26.574 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:16:26.574 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:16:26.576 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:16:26.576 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:16:26.576 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:16:26.577 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:16:26.577 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:16:26.578 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:16:26.579 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:16:26.579 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:16:26.580 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:16:26.581 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:16:26.581  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:16:28.448  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/60', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 60, {}]}
2021-08-05 10:16:28.449 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:16:28.449 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:16:28.450 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:16:28.450 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:16:28.451 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-05 10:16:28.451 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:16:28.452  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:16:28.513  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:28.514 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-05 10:16:28.514 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-05 10:16:28.515 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-05 10:16:28.516 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-05 10:16:28.516 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-05 10:16:28.517 ERROR 10140 --- [http-nio-8080-exec-10] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:92)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$135060bb.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-05 10:16:28.518  WARN 10140 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:16:35.648  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:16:35.650 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:16:35.650 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:16:35.651 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:16:35.652 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:16:35.652 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:16:35.653 ERROR 10140 --- [http-nio-8080-exec-6] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2021-08-05 10:16:35.654  WARN 10140 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:16:36.953  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-05 10:16:36.954 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-05 10:16:36.955 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-05 10:16:36.956 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-05 10:16:36.956 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-05 10:16:36.956 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 10(Integer)
2021-08-05 10:16:36.957 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 4
2021-08-05 10:16:36.958 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-05 10:16:36.958 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-05 10:16:36.960 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-05 10:16:36.960  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index
2021-08-05 10:16:37.000  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:37.001 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-05 10:16:37.001 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-05 10:16:37.002 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-05 10:16:37.002 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-05 10:16:37.003 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-05 10:16:37.003 ERROR 10140 --- [http-nio-8080-exec-8] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:92)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$135060bb.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-05 10:16:37.004  WARN 10140 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:16:39.051  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-05 10:16:39.053 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:16:39.053 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:16:39.054 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:16:39.055 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:16:39.055 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:16:39.056 ERROR 10140 --- [http-nio-8080-exec-7] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/-1，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2021-08-05 10:16:39.057  WARN 10140 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:16:42.118  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-05 10:16:42.122 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:16:42.122 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:16:42.124 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:16:42.124 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:16:42.125 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-05 10:16:42.126 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:16:42.127  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:16:42.179  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:42.179 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-05 10:16:42.179 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-05 10:16:42.181 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-05 10:16:42.181 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-05 10:16:42.181 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-05 10:16:42.182 ERROR 10140 --- [http-nio-8080-exec-3] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:92)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$135060bb.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-05 10:16:42.183  WARN 10140 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:16:43.975  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:16:43.976 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:16:43.976 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:16:43.977 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:16:43.978 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:16:43.978 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:16:43.979 ERROR 10140 --- [http-nio-8080-exec-4] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2021-08-05 10:16:43.980  WARN 10140 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:16:45.359  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:16:45.359 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:16:45.359 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:16:45.360 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:16:45.361 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:16:45.361 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-05 10:16:45.362 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-05 10:16:45.362  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:16:45.425  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:16:45.426 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:16:45.426 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:16:45.428 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:16:45.428 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:16:45.428 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:16:45.429 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:16:45.430 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:16:45.430 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:16:45.431 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:16:45.432 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:16:45.432 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:16:45.433 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:16:45.434  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:19:36.514  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-05 10:19:36.514 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:19:36.514 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:19:36.516 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:19:36.516 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:19:36.517 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-05 10:19:36.518 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:19:36.518  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:19:36.584  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:19:36.585 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:19:36.585 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:19:36.586 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:19:36.586 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:19:36.586 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:19:36.587 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:19:36.587 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:19:36.587 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:19:36.588 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:19:36.589 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:19:36.589 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:19:36.590 DEBUG 10140 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:19:36.590  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:22:54.863  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-05 10:22:54.865 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:22:54.865 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:22:54.866 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:22:54.866 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:22:54.866 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:22:54.868 ERROR 10140 --- [http-nio-8080-exec-8] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/67，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2021-08-05 10:22:54.868  WARN 10140 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:22:57.486  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-05 10:22:57.487 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:22:57.487 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:22:57.488 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:22:57.489 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:22:57.489 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-05 10:22:57.490 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:22:57.490  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:22:57.544  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:22:57.544 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-05 10:22:57.544 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-05 10:22:57.546 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-05 10:22:57.546 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-05 10:22:57.547 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-05 10:22:57.547 ERROR 10140 --- [http-nio-8080-exec-2] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:92)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$135060bb.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-05 10:22:57.548  WARN 10140 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:22:58.918  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:22:58.919 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:22:58.919 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:22:58.920 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:22:58.920 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:22:58.921 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-05 10:22:58.921 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-05 10:22:58.922  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:22:58.978  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:22:58.979 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:22:58.979 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:22:58.982 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:22:58.982 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:22:58.982 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:22:58.983 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:22:58.984 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:22:58.984 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:22:58.986 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:22:58.987 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:22:58.987 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:22:58.989 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:22:58.990  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:26:16.153  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/65', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 65, {}]}
2021-08-05 10:26:16.154 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:26:16.154 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:26:16.155 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:26:16.155 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:26:16.155 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 65(Long)
2021-08-05 10:26:16.156 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 0
2021-08-05 10:26:16.156  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:26:16.196  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:26:16.196 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:26:16.196 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:26:16.198 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:26:16.198 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:26:16.199 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:26:16.199 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:26:16.200 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:26:16.200 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:26:16.201 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:26:16.201 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:26:16.201 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:26:16.203 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:26:16.203  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:26:21.102  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/64', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 64, {}]}
2021-08-05 10:26:21.103 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:26:21.103 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:26:21.104 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:26:21.104 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:26:21.104 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 64(Long)
2021-08-05 10:26:21.105 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : <==      Total: 0
2021-08-05 10:26:21.105  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:26:21.139  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:26:21.140 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:26:21.140 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:26:21.141 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:26:21.141 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:26:21.141 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:26:21.142 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:26:21.142 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:26:21.142 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:26:21.143 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:26:21.144 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:26:21.144 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:26:21.145 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:26:21.145  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:27:26.543  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-05 10:27:26.544 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:27:26.545 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:27:26.546 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:27:26.546 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:27:26.547 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:27:26.548 ERROR 10140 --- [http-nio-8080-exec-9] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/67，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-05 10:27:26.549  WARN 10140 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:27:28.597  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-05 10:27:28.598 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:27:28.599 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:27:28.599 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:27:28.600 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:27:28.600 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:27:28.601 ERROR 10140 --- [http-nio-8080-exec-1] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/67，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-05 10:27:28.601  WARN 10140 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:27:29.997  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-05 10:27:29.997 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:27:29.997 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:27:29.998 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:27:29.999 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:27:29.999 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-05 10:27:30.000 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:27:30.000  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:27:30.048  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:27:30.048 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-05 10:27:30.049 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-05 10:27:30.050 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-05 10:27:30.051 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-05 10:27:30.051 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-05 10:27:30.052 ERROR 10140 --- [http-nio-8080-exec-7] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:92)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$135060bb.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor99.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-05 10:27:30.052  WARN 10140 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:27:30.344  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-05 10:27:30.344 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:27:30.345 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:27:30.345 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:27:30.346 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:27:30.346 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-05 10:27:30.347 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:27:30.347  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:27:30.395  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:27:30.395 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:27:30.396 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:27:30.397 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:27:30.398 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:27:30.398 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:27:30.399 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:27:30.400 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:27:30.400 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:27:30.401 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:27:30.402 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:27:30.402 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:27:30.404 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:27:30.404  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:27:33.950  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:27:33.951 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:27:33.951 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:27:33.952 DEBUG 10140 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:27:33.952 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:27:33.952 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:27:33.953 ERROR 10140 --- [http-nio-8080-exec-1] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-05 10:27:33.954  WARN 10140 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:27:35.306  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:27:35.307 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:27:35.307 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:27:35.308 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:27:35.309 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:27:35.309 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:27:35.310 ERROR 10140 --- [http-nio-8080-exec-10] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-05 10:27:35.311  WARN 10140 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:27:35.882  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:27:35.882 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:27:35.883 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:27:35.883 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:27:35.883 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:27:35.884 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:27:35.884 ERROR 10140 --- [http-nio-8080-exec-4] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-05 10:27:35.885  WARN 10140 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:27:36.364  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:27:36.365 DEBUG 10140 --- [http-nio-8080-exec-5] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:27:36.365 DEBUG 10140 --- [http-nio-8080-exec-5] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:27:36.366 DEBUG 10140 --- [http-nio-8080-exec-5] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:27:36.366 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:27:36.366 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:27:36.367 ERROR 10140 --- [http-nio-8080-exec-5] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-05 10:27:36.368  WARN 10140 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:27:36.761  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:27:36.762 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:27:36.762 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:27:36.763 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:27:36.763 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:27:36.763 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:27:36.764 ERROR 10140 --- [http-nio-8080-exec-6] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-05 10:27:36.765  WARN 10140 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:27:36.926  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:27:36.926 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:27:36.927 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:27:36.927 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:27:36.928 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:27:36.928 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-05 10:27:36.929 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-05 10:27:36.929  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:27:36.988  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:27:36.989 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:27:36.989 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:27:36.992 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:27:36.992 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:27:36.993 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:27:36.994 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:27:36.995 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:27:36.995 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:27:36.996 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:27:36.997 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:27:36.997 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:27:36.998 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:27:36.999  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:27:37.255  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:27:37.255 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-05 10:27:37.255 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-05 10:27:37.256 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-05 10:27:37.257 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-05 10:27:37.257 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-05 10:27:37.258 ERROR 10140 --- [http-nio-8080-exec-8] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$156d1c2d.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$9a34599c.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-05 10:27:37.259  WARN 10140 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:27:37.381  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-05 10:27:37.381 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:27:37.381 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:27:37.382 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:27:37.383 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:27:37.383 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-05 10:27:37.384 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-05 10:27:37.384  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:27:37.441  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:27:37.441 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:27:37.441 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:27:37.443 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:27:37.443 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:27:37.443 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:27:37.444 DEBUG 10140 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:27:37.445 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:27:37.445 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:27:37.446 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:27:37.447 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:27:37.447 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:27:37.448 DEBUG 10140 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:27:37.448  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:28:31.198  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.ArchiveShowController.archive', args=[{}]}
2021-08-05 10:28:31.201 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-05 10:28:31.201 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-05 10:28:31.202 DEBUG 10140 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-05 10:28:31.202 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by desc LIMIT ? 
2021-08-05 10:28:31.202 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10000(Integer)
2021-08-05 10:28:31.204 ERROR 10140 --- [http-nio-8080-exec-6] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/archives，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getAllBlogQuery(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getAllBlogQuery(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getAllBlog(BlogServiceImpl.java:36)
	at com.star.controller.ArchiveShowController.archive(ArchiveShowController.java:29)
	at com.star.controller.ArchiveShowController$$FastClassBySpringCGLIB$$1515a458.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.ArchiveShowController$$EnhancerBySpringCGLIB$$d4e46902.archive(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 89 common frames omitted

2021-08-05 10:28:31.204  WARN 10140 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-05 10:28:32.890  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.ArchiveShowController.archive', args=[{}]}
2021-08-05 10:28:32.890 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from myblog.t_blog b left outer join myblog.t_type t on b.type_id = t.id order by b.update_time asc 
2021-08-05 10:28:32.890 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 
2021-08-05 10:28:32.892 DEBUG 10140 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-05 10:28:32.892  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : archives
2021-08-05 10:28:32.944  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:28:32.945 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:28:32.945 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:28:32.946 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:28:32.947 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:28:32.947 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:28:32.948 DEBUG 10140 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:28:32.949 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:28:32.949 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:28:32.951 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:28:32.951 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:28:32.951 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:28:32.953 DEBUG 10140 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:28:32.953  INFO 10140 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:28:40.633  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[63, {}]}
2021-08-05 10:28:40.634 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 10:28:40.634 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 63(Long)
2021-08-05 10:28:40.635 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 10:28:40.636 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 10:28:40.636 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : ==> Parameters: 63(Long)
2021-08-05 10:28:40.640 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 10:28:40.640 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 10:28:40.640 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 63(Long), 63(Long), 63(Long)
2021-08-05 10:28:40.641 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 10:28:40.642 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:28:40.642 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-05 10:28:40.643 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-05 10:28:40.643 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:28:40.644 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-05 10:28:40.645 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-05 10:28:40.645 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:28:40.646 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-05 10:28:40.646 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-05 10:28:40.647 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:28:40.647 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-05 10:28:40.648 DEBUG 10140 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 10:28:40.648  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : blog
2021-08-05 10:28:40.980  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:28:40.981 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:28:40.981 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:28:40.982 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:28:40.982 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:28:40.982 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:28:40.983 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:28:40.983 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:28:40.983 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:28:40.985 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:28:40.985 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:28:40.985 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:28:40.986 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:28:40.987  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:28:41.066  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[63, {}]}
2021-08-05 10:28:41.066 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:28:41.067 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-05 10:28:41.069 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-05 10:28:41.070 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:28:41.070 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-05 10:28:41.071 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-05 10:28:41.072 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:28:41.072 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-05 10:28:41.073 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-05 10:28:41.073 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:28:41.073 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-05 10:28:41.074 DEBUG 10140 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 10:28:41.074  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : blog :: commentList
2021-08-05 10:30:39.572  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.message', args=[]}
2021-08-05 10:30:39.572  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : message
2021-08-05 10:30:39.620  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:30:39.620 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:30:39.621 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:30:39.622 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:30:39.622 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:30:39.623 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:30:39.623 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:30:39.623 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:30:39.624 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:30:39.625 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:30:39.625 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:30:39.625 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:30:39.626 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:30:39.626  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:30:39.633  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/messagecomment', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.messages', args=[{}]}
2021-08-05 10:30:39.634 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.dao.MessageDao.findByParentIdNull    : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2021-08-05 10:30:39.634 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.dao.MessageDao.findByParentIdNull    : ==> Parameters: -1(Long)
2021-08-05 10:30:39.636 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.dao.MessageDao.findByParentIdNull    : <==      Total: 1
2021-08-05 10:30:39.637 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.MessageDao.findByParentIdNotNull   : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2021-08-05 10:30:39.638 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.MessageDao.findByParentIdNotNull   : ==> Parameters: 100(Long)
2021-08-05 10:30:39.639 DEBUG 10140 --- [http-nio-8080-exec-9] c.s.d.MessageDao.findByParentIdNotNull   : <==      Total: 0
2021-08-05 10:30:39.639  INFO 10140 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : message::messageList
2021-08-05 10:33:39.715  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/friends', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.FriendsShowController.friends', args=[{}]}
2021-08-05 10:33:39.718 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc 
2021-08-05 10:33:39.718 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 
2021-08-05 10:33:39.726 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-05 10:33:39.727  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : friends
2021-08-05 10:33:39.766  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:33:39.766 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:33:39.766 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:33:39.768 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:33:39.768 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:33:39.768 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:33:39.769 DEBUG 10140 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:33:39.770 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:33:39.770 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:33:39.771 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:33:39.772 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:33:39.772 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:33:39.774 DEBUG 10140 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:33:39.774  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:34:09.022  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/picture', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.PictureShowController.friends', args=[{}]}
2021-08-05 10:34:09.025 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc 
2021-08-05 10:34:09.025 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.PictureDao.listPicture      : ==> Parameters: 
2021-08-05 10:34:09.033 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.PictureDao.listPicture      : <==      Total: 2
2021-08-05 10:34:09.033  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : picture
2021-08-05 10:34:09.083  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:34:09.083 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:34:09.083 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:34:09.084 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:34:09.084 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:34:09.084 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:34:09.085 DEBUG 10140 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:34:09.085 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:34:09.085 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:34:09.086 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:34:09.087 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:34:09.087 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:34:09.088 DEBUG 10140 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:34:09.089  INFO 10140 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:34:09.414  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2021-08-05 10:34:09.415  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : about
2021-08-05 10:34:09.447  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:34:09.447 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:34:09.447 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:34:09.448 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:34:09.449 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:34:09.449 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:34:09.449 DEBUG 10140 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:34:09.450 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:34:09.450 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:34:09.451 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:34:09.451 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:34:09.451 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:34:09.452 DEBUG 10140 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:34:09.452  INFO 10140 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:34:16.054  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.message', args=[]}
2021-08-05 10:34:16.054  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : message
2021-08-05 10:34:16.086  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:34:16.086 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:34:16.087 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:34:16.088 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:34:16.088 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:34:16.088 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:34:16.089 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:34:16.089 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:34:16.089 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:34:16.090 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:34:16.090 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:34:16.090 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:34:16.091 DEBUG 10140 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:34:16.092  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:34:16.107  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/messagecomment', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.messages', args=[{}]}
2021-08-05 10:34:16.108 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.MessageDao.findByParentIdNull    : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2021-08-05 10:34:16.108 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.MessageDao.findByParentIdNull    : ==> Parameters: -1(Long)
2021-08-05 10:34:16.110 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.dao.MessageDao.findByParentIdNull    : <==      Total: 1
2021-08-05 10:34:16.111 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.MessageDao.findByParentIdNotNull   : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2021-08-05 10:34:16.111 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.MessageDao.findByParentIdNotNull   : ==> Parameters: 100(Long)
2021-08-05 10:34:16.112 DEBUG 10140 --- [http-nio-8080-exec-10] c.s.d.MessageDao.findByParentIdNotNull   : <==      Total: 0
2021-08-05 10:34:16.112  INFO 10140 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : message::messageList
2021-08-05 10:49:22.019  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-05 10:49:22.022 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-05 10:49:22.022 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-05 10:49:22.028 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-05 10:49:22.029 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-05 10:49:22.029 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-05 10:49:22.030 DEBUG 10140 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-05 10:49:22.031  INFO 10140 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : types
2021-08-05 10:49:22.090  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:49:22.091 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:49:22.091 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:49:22.095 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:49:22.095 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:49:22.095 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:49:22.096 DEBUG 10140 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:49:22.096 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:49:22.096 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:49:22.098 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:49:22.098 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:49:22.098 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:49:22.100 DEBUG 10140 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:49:22.100  INFO 10140 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:49:23.311  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[63, {}]}
2021-08-05 10:49:23.311 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-05 10:49:23.312 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 63(Long)
2021-08-05 10:49:23.312 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-05 10:49:23.313 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-05 10:49:23.313 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==> Parameters: 63(Long)
2021-08-05 10:49:23.317 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-05 10:49:23.318 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 10:49:23.318 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 63(Long), 63(Long), 63(Long)
2021-08-05 10:49:23.320 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 10:49:23.321 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:49:23.321 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-05 10:49:23.322 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-05 10:49:23.322 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:49:23.322 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-05 10:49:23.323 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-05 10:49:23.323 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:49:23.324 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-05 10:49:23.324 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-05 10:49:23.324 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:49:23.324 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-05 10:49:23.325 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 10:49:23.325  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog
2021-08-05 10:49:23.552  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-05 10:49:23.552 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-05 10:49:23.552 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-05 10:49:23.554 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-05 10:49:23.554 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-05 10:49:23.554 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-05 10:49:23.554 DEBUG 10140 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-05 10:49:23.555 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-05 10:49:23.555 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-05 10:49:23.556 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-05 10:49:23.556 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-05 10:49:23.556 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-05 10:49:23.558 DEBUG 10140 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-05 10:49:23.558  INFO 10140 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-05 10:49:23.740  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[63, {}]}
2021-08-05 10:49:23.741 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:49:23.741 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-05 10:49:23.742 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-05 10:49:23.742 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:49:23.742 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-05 10:49:23.743 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-05 10:49:23.743 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:49:23.743 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-05 10:49:23.744 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-05 10:49:23.744 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:49:23.744 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-05 10:49:23.745 DEBUG 10140 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 10:49:23.745  INFO 10140 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog :: commentList
2021-08-05 10:50:19.578  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.post', args=[Comment{id=null, nickname='王柳', email='28926@qq.com', content='初级者', avatar='null', createTime=null, blogId=63, parentCommentId=null, parentNickname='null', replyComments=[], parentComment=Comment{id=-1, nickname='null', email='null', content='null', avatar='null', createTime=null, blogId=null, parentCommentId=null, parentNickname='null', replyComments=[], parentComment=null, adminComment=false, blog=null}, adminComment=false, blog=null}, org.apache.catalina.session.StandardSessionFacade@3b10ba42, {comment=Comment{id=null, nickname='王柳', email='28926@qq.com', content='初级者', avatar='null', createTime=null, blogId=63, parentCommentId=null, parentNickname='null', replyComments=[], parentComment=Comment{id=-1, nickname='null', email='null', content='null', avatar='null', createTime=null, blogId=null, parentCommentId=null, parentNickname='null', replyComments=[], parentComment=null, adminComment=false, blog=null}, adminComment=false, blog=null}, org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2021-08-05 10:50:19.579 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.CommentDao.saveComment      : ==>  Preparing: insert into myblog.t_comment (nickname,email,content,avatar,create_time,blog_id,parent_comment_id,admin_comment) values (?,?,?,?,?,?,?,?); 
2021-08-05 10:50:19.582 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.CommentDao.saveComment      : ==> Parameters: 王柳(String), 28926@qq.com(String), 初级者(String), /images/avatar.png(String), 2021-08-05 10:50:19.579(Timestamp), 63(Long), -1(Long), false(Boolean)
2021-08-05 10:50:19.595 DEBUG 10140 --- [http-nio-8080-exec-8] com.star.dao.CommentDao.saveComment      : <==    Updates: 1
2021-08-05 10:50:19.595 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-05 10:50:19.595 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 63(Long), 63(Long), 63(Long)
2021-08-05 10:50:19.598 DEBUG 10140 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-05 10:50:19.598 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:50:19.598 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-05 10:50:19.599 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 3
2021-08-05 10:50:19.599 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:50:19.599 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 31(Long)
2021-08-05 10:50:19.600 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 10:50:19.600 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:50:19.600 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-05 10:50:19.601 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-05 10:50:19.602 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:50:19.602 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-05 10:50:19.602 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-05 10:50:19.603 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-05 10:50:19.603 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-05 10:50:19.603 DEBUG 10140 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-05 10:50:19.604  INFO 10140 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog :: commentList
