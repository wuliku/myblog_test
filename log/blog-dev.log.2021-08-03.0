2021-08-03 10:25:41.183  INFO 23608 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on LAPTOP-D9PU3479 with PID 23608 (E:\JavaProject\myblog-mybatis-master\target\classes started by admin in E:\JavaProject\myblog-mybatis-master)
2021-08-03 10:25:41.190 DEBUG 23608 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2021-08-03 10:25:41.191  INFO 23608 --- [restartedMain] com.star.MyblogApplication               : The following profiles are active: dev
2021-08-03 10:25:41.283  INFO 23608 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-08-03 10:25:41.284  INFO 23608 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-08-03 10:25:42.518  INFO 23608 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-08-03 10:25:42.526  INFO 23608 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-08-03 10:25:42.526  INFO 23608 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2021-08-03 10:25:42.597  INFO 23608 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-08-03 10:25:42.598  INFO 23608 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1314 ms
2021-08-03 10:25:43.231  INFO 23608 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-08-03 10:25:43.315  INFO 23608 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-08-03 10:25:43.612  INFO 23608 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-08-03 10:25:43.652  INFO 23608 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-08-03 10:25:43.654  INFO 23608 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 3.094 seconds (JVM running for 4.151)
2021-08-03 10:25:49.660  INFO 23608 --- [http-nio-8080-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-08-03 10:25:49.660  INFO 23608 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-08-03 10:25:49.667  INFO 23608 --- [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2021-08-03 10:25:49.693  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 10:25:49.712  INFO 23608 --- [http-nio-8080-exec-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2021-08-03 10:25:49.823  INFO 23608 --- [http-nio-8080-exec-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2021-08-03 10:25:49.853 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 10:25:49.868 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 10:25:49.913 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 10:25:49.915 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 10:25:49.916 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 10:25:49.919 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 10:25:49.921 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 10:25:49.921 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 10:25:49.924 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 10:25:49.926  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index
2021-08-03 10:25:50.590  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:25:50.593 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:25:50.593 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:25:50.598 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:25:50.599 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:25:50.600 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:25:50.602 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:25:50.603 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:25:50.603 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:25:50.608 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:25:50.609 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:25:50.609 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:25:50.614 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:25:50.615  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:04.766 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2021-08-03 10:26:04.767 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: admin(String), e10adc3949ba59abbe56e057f20f883e(String)
2021-08-03 10:26:04.768 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 0
2021-08-03 10:26:05.782 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2021-08-03 10:26:05.783 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: admin(String), e10adc3949ba59abbe56e057f20f883e(String)
2021-08-03 10:26:05.784 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 0
2021-08-03 10:26:08.625 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2021-08-03 10:26:08.625 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: zhaosi(String), 96e79218965eb72c92a549dd5a330112(String)
2021-08-03 10:26:08.629 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2021-08-03 10:26:08.668  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:08.668 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:08.669 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:08.670 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:08.671 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:08.671 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:08.672 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:08.672 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:08.672 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:08.674 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:08.674 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:08.674 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:08.676 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:08.676  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:10.559 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 10:26:10.559 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 10:26:10.561 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 10:26:10.562 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 10:26:10.563 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 10:26:10.566 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 10:26:10.575 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 10:26:10.575 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 10:26:10.577 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 10:26:10.626  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:10.627 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:10.627 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:10.629 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:10.630 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:10.630 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:10.630 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:10.631 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:10.632 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:10.633 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:10.634 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:10.635 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:10.636 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:10.636  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:13.709 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 10:26:13.710 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 10:26:13.712 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 10:26:13.712 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 10:26:13.712 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 10:26:13.714 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 10:26:13.759  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:13.760 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:13.760 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:13.761 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:13.762 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:13.762 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:13.763 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:13.763 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:13.763 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:13.765 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:13.765 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:13.765 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:13.767 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:13.767  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:14.690 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 10:26:14.690 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 10:26:14.691 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 10:26:14.692 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 10:26:14.693 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 10:26:14.694 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 10:26:14.695 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 10:26:14.696 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 10:26:14.697 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 10:26:14.736  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:14.737 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:14.737 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:14.738 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:14.739 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:14.739 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:14.740 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:14.740 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:14.741 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:14.742 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:14.743 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:14.743 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:14.744 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:14.745  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:16.814 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 10:26:16.815 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 10:26:16.817 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 10:26:16.818 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 10:26:16.818 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 10:26:16.819 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 10:26:16.857  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:16.858 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:16.858 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:16.859 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:16.859 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:16.860 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:16.860 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:16.861 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:16.861 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:16.862 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:16.863 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:16.863 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:16.864 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:16.865  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:20.447 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 10:26:20.447 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 10:26:20.449 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 10:26:20.450 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ?, ? 
2021-08-03 10:26:20.450 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer), 10(Integer)
2021-08-03 10:26:20.451 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 4
2021-08-03 10:26:20.489  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:20.489 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:20.489 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:20.491 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:20.491 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:20.491 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:20.492 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:20.492 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:20.492 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:20.493 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:20.494 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:20.494 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:20.495 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:20.496  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:22.160 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 10:26:22.161 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 10:26:22.162 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 10:26:22.163 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 10:26:22.164 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 10:26:22.165 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 10:26:22.206  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:22.206 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:22.206 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:22.207 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:22.208 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:22.208 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:22.209 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:22.209 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:22.209 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:22.210 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:22.211 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:22.211 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:22.213 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:22.214  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:24.313 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.F.listFriendLink_COUNT             : ==>  Preparing: SELECT count(0) FROM myblog.t_friend 
2021-08-03 10:26:24.313 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.F.listFriendLink_COUNT             : ==> Parameters: 
2021-08-03 10:26:24.319 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.F.listFriendLink_COUNT             : <==      Total: 1
2021-08-03 10:26:24.319 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc LIMIT ? 
2021-08-03 10:26:24.320 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 10(Integer)
2021-08-03 10:26:24.321 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 10:26:24.361  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:24.361 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:24.361 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:24.363 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:24.363 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:24.363 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:24.364 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:24.364 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:24.364 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:24.365 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:24.366 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:24.366 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:24.368 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:24.368  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:25.944 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.PictureDao.listPicture_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_picture 
2021-08-03 10:26:25.944 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.PictureDao.listPicture_COUNT  : ==> Parameters: 
2021-08-03 10:26:25.955 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.PictureDao.listPicture_COUNT  : <==      Total: 1
2021-08-03 10:26:25.955 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc LIMIT ? 
2021-08-03 10:26:25.956 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.PictureDao.listPicture      : ==> Parameters: 10(Integer)
2021-08-03 10:26:25.956 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.PictureDao.listPicture      : <==      Total: 2
2021-08-03 10:26:25.992  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:25.992 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:25.992 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:25.994 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:25.994 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:25.994 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:25.995 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:25.995 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:25.995 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:25.996 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:25.997 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:25.997 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:25.998 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:25.999  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:27.944 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 10:26:27.945 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 10:26:27.945 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 10:26:27.947 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 10:26:27.947 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 10:26:27.948 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 10:26:27.950 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 10:26:27.950 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 10:26:27.951 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 10:26:27.985  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:27.986 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:27.986 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:27.988 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:27.988 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:27.988 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:27.989 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:27.989 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:27.989 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:27.990 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:27.991 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:27.991 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:27.992 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:27.993  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:28.819 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 10:26:28.819 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 10:26:28.820 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 10:26:28.821 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 10:26:28.821 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 10:26:28.822 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 10:26:28.857  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:28.857 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:28.857 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:28.858 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:28.859 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:28.859 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:28.860 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:28.860 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:28.861 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:28.862 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:28.863 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:28.863 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:28.864 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:28.865  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:29.257 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.F.listFriendLink_COUNT             : ==>  Preparing: SELECT count(0) FROM myblog.t_friend 
2021-08-03 10:26:29.257 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.F.listFriendLink_COUNT             : ==> Parameters: 
2021-08-03 10:26:29.258 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.F.listFriendLink_COUNT             : <==      Total: 1
2021-08-03 10:26:29.259 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc LIMIT ? 
2021-08-03 10:26:29.259 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 10(Integer)
2021-08-03 10:26:29.259 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 10:26:29.293  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:29.293 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:29.293 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:29.294 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:29.295 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:29.295 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:29.295 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:29.296 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:29.296 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:29.297 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:29.298 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:29.298 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:29.300 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:29.300  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 10:26:29.640 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.PictureDao.listPicture_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_picture 
2021-08-03 10:26:29.640 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.PictureDao.listPicture_COUNT  : ==> Parameters: 
2021-08-03 10:26:29.641 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.PictureDao.listPicture_COUNT  : <==      Total: 1
2021-08-03 10:26:29.642 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc LIMIT ? 
2021-08-03 10:26:29.642 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.PictureDao.listPicture      : ==> Parameters: 10(Integer)
2021-08-03 10:26:29.642 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.PictureDao.listPicture      : <==      Total: 2
2021-08-03 10:26:29.679  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 10:26:29.679 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 10:26:29.679 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 10:26:29.680 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 10:26:29.681 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 10:26:29.681 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 10:26:29.682 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 10:26:29.683 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 10:26:29.683 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 10:26:29.684 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 10:26:29.685 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 10:26:29.685 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 10:26:29.686 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 10:26:29.687  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 12:59:54.091 DEBUG 23608 --- [http-nio-8080-exec-2] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2021-08-03 12:59:54.093 DEBUG 23608 --- [http-nio-8080-exec-2] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: zhaosi(String), 96e79218965eb72c92a549dd5a330112(String)
2021-08-03 12:59:54.097 DEBUG 23608 --- [http-nio-8080-exec-2] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2021-08-03 12:59:54.139  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 12:59:54.140 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 12:59:54.140 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 12:59:54.144 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 12:59:54.145 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 12:59:54.145 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 12:59:54.146 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 12:59:54.146 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 12:59:54.146 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 12:59:54.148 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 12:59:54.148 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 12:59:54.149 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 12:59:54.150 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 12:59:54.151  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 12:59:55.826 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 12:59:55.826 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 12:59:55.828 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 12:59:55.829 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 12:59:55.830 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 12:59:55.830 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 12:59:55.866  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 12:59:55.866 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 12:59:55.866 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 12:59:55.868 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 12:59:55.868 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 12:59:55.868 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 12:59:55.869 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 12:59:55.869 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 12:59:55.870 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 12:59:55.871 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 12:59:55.871 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 12:59:55.872 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 12:59:55.873 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 12:59:55.874  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 12:59:57.015 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.PictureDao.listPicture_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_picture 
2021-08-03 12:59:57.015 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.PictureDao.listPicture_COUNT  : ==> Parameters: 
2021-08-03 12:59:57.017 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.PictureDao.listPicture_COUNT  : <==      Total: 1
2021-08-03 12:59:57.017 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc LIMIT ? 
2021-08-03 12:59:57.018 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.PictureDao.listPicture      : ==> Parameters: 10(Integer)
2021-08-03 12:59:57.019 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.PictureDao.listPicture      : <==      Total: 2
2021-08-03 12:59:57.052  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 12:59:57.053 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 12:59:57.053 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 12:59:57.054 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 12:59:57.054 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 12:59:57.054 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 12:59:57.055 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 12:59:57.055 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 12:59:57.055 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 12:59:57.056 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 12:59:57.057 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 12:59:57.057 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 12:59:57.058 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 12:59:57.058  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 12:59:58.265 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.PictureDao.getPicture       : ==>  Preparing: select * from myblog.t_picture p where p.id = ? 
2021-08-03 12:59:58.265 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.PictureDao.getPicture       : ==> Parameters: 20(Long)
2021-08-03 12:59:58.267 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.PictureDao.getPicture       : <==      Total: 1
2021-08-03 12:59:58.314  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 12:59:58.314 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 12:59:58.315 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 12:59:58.316 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 12:59:58.316 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 12:59:58.316 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 12:59:58.317 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 12:59:58.317 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 12:59:58.317 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 12:59:58.318 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 12:59:58.318 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 12:59:58.319 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 12:59:58.320 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 12:59:58.320  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:00:01.992 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.d.F.listFriendLink_COUNT             : ==>  Preparing: SELECT count(0) FROM myblog.t_friend 
2021-08-03 13:00:01.992 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.d.F.listFriendLink_COUNT             : ==> Parameters: 
2021-08-03 13:00:01.994 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.d.F.listFriendLink_COUNT             : <==      Total: 1
2021-08-03 13:00:01.995 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc LIMIT ? 
2021-08-03 13:00:01.996 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 10(Integer)
2021-08-03 13:00:01.997 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 13:00:02.035  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:00:02.035 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:00:02.035 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:00:02.037 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:00:02.037 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:00:02.037 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:00:02.038 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:00:02.038 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:00:02.038 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:00:02.039 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:00:02.040 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:00:02.040 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:00:02.041 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:00:02.042  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:00:03.988 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 13:00:03.988 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 13:00:03.990 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 13:00:03.990 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 13:00:03.990 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 13:00:03.991 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 13:00:04.025  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:00:04.026 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:00:04.026 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:00:04.027 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:00:04.027 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:00:04.027 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:00:04.028 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:00:04.028 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:00:04.028 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:00:04.030 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:00:04.031 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:00:04.031 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:00:04.032 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:00:04.033  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:00:04.687 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 13:00:04.688 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 13:00:04.688 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 13:00:04.689 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 13:00:04.689 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 13:00:04.691 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 13:00:04.692 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:00:04.692 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:00:04.693 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:00:04.726  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:00:04.726 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:00:04.726 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:00:04.727 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:00:04.728 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:00:04.728 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:00:04.729 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:00:04.729 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:00:04.730 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:00:04.731 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:00:04.731 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:00:04.731 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:00:04.732 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:00:04.733  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:00:08.206 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2021-08-03 13:00:08.207 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 62(Long)
2021-08-03 13:00:08.208 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2021-08-03 13:00:08.209 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:00:08.209 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:00:08.210 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:00:08.254  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:00:08.254 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:00:08.255 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:00:08.256 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:00:08.256 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:00:08.256 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:00:08.257 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:00:08.257 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:00:08.257 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:00:08.258 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:00:08.259 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:00:08.259 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:00:08.260 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:00:08.260  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:01:30.885 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 13:01:30.885 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 13:01:30.886 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 13:01:30.887 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 13:01:30.887 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 13:01:30.888 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 13:01:30.889 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:01:30.889 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:01:30.890 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:01:30.935  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:01:30.935 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:01:30.936 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:01:30.937 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:01:30.937 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:01:30.937 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:01:30.938 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:01:30.938 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:01:30.938 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:01:30.939 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:01:30.939 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:01:30.939 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:01:30.940 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:01:30.941  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:01:31.734 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:01:31.734 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:01:31.735 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:01:31.779  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:01:31.780 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:01:31.780 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:01:31.781 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:01:31.781 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:01:31.781 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:01:31.782 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:01:31.782 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:01:31.783 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:01:31.784 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:01:31.784 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:01:31.784 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:01:31.786 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:01:31.786  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:01:42.497 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 13:01:42.497 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 13:01:42.498 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 13:01:42.499 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 13:01:42.499 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 13:01:42.499 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 13:01:42.539  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:01:42.540 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:01:42.540 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:01:42.542 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:01:42.542 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:01:42.542 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:01:42.543 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:01:42.543 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:01:42.543 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:01:42.544 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:01:42.545 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:01:42.545 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:01:42.546 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:01:42.546  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:01:44.055 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.F.listFriendLink_COUNT             : ==>  Preparing: SELECT count(0) FROM myblog.t_friend 
2021-08-03 13:01:44.055 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.F.listFriendLink_COUNT             : ==> Parameters: 
2021-08-03 13:01:44.056 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.F.listFriendLink_COUNT             : <==      Total: 1
2021-08-03 13:01:44.057 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc LIMIT ? 
2021-08-03 13:01:44.057 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 10(Integer)
2021-08-03 13:01:44.058 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 13:01:44.093  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:01:44.093 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:01:44.093 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:01:44.094 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:01:44.095 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:01:44.095 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:01:44.095 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:01:44.095 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:01:44.096 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:01:44.096 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:01:44.097 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:01:44.097 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:01:44.098 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:01:44.098  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:01:44.544 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.PictureDao.listPicture_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_picture 
2021-08-03 13:01:44.545 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.PictureDao.listPicture_COUNT  : ==> Parameters: 
2021-08-03 13:01:44.546 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.PictureDao.listPicture_COUNT  : <==      Total: 1
2021-08-03 13:01:44.546 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc LIMIT ? 
2021-08-03 13:01:44.546 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.PictureDao.listPicture      : ==> Parameters: 10(Integer)
2021-08-03 13:01:44.547 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.PictureDao.listPicture      : <==      Total: 2
2021-08-03 13:01:44.581  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:01:44.581 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:01:44.581 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:01:44.582 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:01:44.583 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:01:44.583 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:01:44.583 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:01:44.583 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:01:44.584 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:01:44.585 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:01:44.585 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:01:44.585 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:01:44.587 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:01:44.587  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:01:45.042 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.d.F.listFriendLink_COUNT             : ==>  Preparing: SELECT count(0) FROM myblog.t_friend 
2021-08-03 13:01:45.043 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.d.F.listFriendLink_COUNT             : ==> Parameters: 
2021-08-03 13:01:45.044 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.d.F.listFriendLink_COUNT             : <==      Total: 1
2021-08-03 13:01:45.044 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc LIMIT ? 
2021-08-03 13:01:45.044 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 10(Integer)
2021-08-03 13:01:45.045 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 13:01:45.078  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:01:45.078 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:01:45.078 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:01:45.079 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:01:45.080 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:01:45.080 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:01:45.081 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:01:45.081 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:01:45.081 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:01:45.082 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:01:45.083 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:01:45.083 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:01:45.084 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:01:45.084  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:01:45.427 DEBUG 23608 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 13:01:45.427 DEBUG 23608 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 13:01:45.428 DEBUG 23608 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 13:01:45.428 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 13:01:45.428 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 13:01:45.429 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 13:01:45.430 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:01:45.430 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:01:45.430 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:01:45.463  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:01:45.463 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:01:45.463 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:01:45.465 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:01:45.465 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:01:45.465 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:01:45.466 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:01:45.466 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:01:45.466 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:01:45.467 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:01:45.467 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:01:45.467 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:01:45.468 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:01:45.468  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:01:50.919  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 13:01:50.922 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 13:01:50.922 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 13:01:50.923 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 13:01:50.923 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 13:01:50.923 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 13:01:50.925 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 13:01:50.926 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 13:01:50.926 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 13:01:50.927 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 13:01:50.927  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index
2021-08-03 13:01:50.973  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:01:50.974 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:01:50.974 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:01:50.975 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:01:50.976 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:01:50.976 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:01:50.977 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:01:50.977 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:01:50.977 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:01:50.978 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:01:50.979 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:01:50.979 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:01:50.980 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:01:50.980  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:02:06.419  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[63, {}]}
2021-08-03 13:02:06.420 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-03 13:02:06.421 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 63(Long)
2021-08-03 13:02:06.422 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-03 13:02:06.458 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-03 13:02:06.459 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 63(Long)
2021-08-03 13:02:06.467 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-03 13:02:06.467 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-03 13:02:06.467 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 63(Long), 63(Long), 63(Long)
2021-08-03 13:02:06.468 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-03 13:02:06.468 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 13:02:06.468 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-03 13:02:06.470 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-03 13:02:06.470 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 13:02:06.470 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-03 13:02:06.471 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-03 13:02:06.471 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 13:02:06.471 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-03 13:02:06.472 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-03 13:02:06.472 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 13:02:06.472 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-03 13:02:06.473 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-03 13:02:06.473  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2021-08-03 13:02:06.862  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:02:06.862 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:02:06.862 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:02:06.864 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:02:06.864 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:02:06.864 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:02:06.865 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:02:06.865 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:02:06.865 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:02:06.866 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:02:06.866 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:02:06.867 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:02:06.868 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:02:06.868  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:02:06.971  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[63, {}]}
2021-08-03 13:02:06.978 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 13:02:06.978 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-03 13:02:06.979 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-03 13:02:06.980 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 13:02:06.980 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-03 13:02:06.981 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-03 13:02:06.981 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 13:02:06.982 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-03 13:02:06.982 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-03 13:02:06.982 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 13:02:06.983 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-03 13:02:06.983 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-03 13:02:06.983  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog :: commentList
2021-08-03 13:02:26.976  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 13:02:26.979 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 13:02:26.979 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 13:02:26.981 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 13:02:26.981 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 13:02:26.982 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 13:02:26.982 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 13:02:26.982  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : types
2021-08-03 13:02:27.059  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:02:27.060 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:02:27.060 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:02:27.063 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:02:27.064 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:02:27.064 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:02:27.065 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:02:27.065 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:02:27.066 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:02:27.067 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:02:27.068 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:02:27.069 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:02:27.070 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:02:27.070  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:03:53.231  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2021-08-03 13:03:53.234  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : about
2021-08-03 13:03:53.278  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:03:53.279 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:03:53.279 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:03:53.280 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:03:53.280 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:03:53.280 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:03:53.280 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:03:53.281 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:03:53.281 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:03:53.282 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:03:53.282 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:03:53.282 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:03:53.283 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:03:53.283  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:19:05.967  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 13:19:05.971 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 13:19:05.971 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 13:19:05.975 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 13:19:05.975 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 13:19:05.975 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 13:19:05.977 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 13:19:05.977 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 13:19:05.977 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 13:19:05.979 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 13:19:05.979  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index
2021-08-03 13:19:06.036  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:19:06.036 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:19:06.036 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:19:06.042 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:19:06.042 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:19:06.042 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:19:06.043 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:19:06.043 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:19:06.043 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:19:06.044 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:19:06.045 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:19:06.045 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:19:06.046 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:19:06.046  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:19:42.613  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.ArchiveShowController.archive', args=[{}]}
2021-08-03 13:19:42.616 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from myblog.t_blog b left outer join myblog.t_type t on b.type_id = t.id order by b.update_time asc 
2021-08-03 13:19:42.616 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 
2021-08-03 13:19:42.617 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 13:19:42.617  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : archives
2021-08-03 13:19:42.681  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:19:42.681 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:19:42.681 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:19:42.683 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:19:42.683 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:19:42.683 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:19:42.684 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:19:42.684 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:19:42.684 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:19:42.686 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:19:42.686 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:19:42.687 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:19:42.688 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:19:42.688  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:19:43.390  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2021-08-03 13:19:43.392  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : music
2021-08-03 13:19:44.536  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.message', args=[]}
2021-08-03 13:19:44.540  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : message
2021-08-03 13:19:44.673  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:19:44.674 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:19:44.674 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:19:44.675 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:19:44.676 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:19:44.676 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:19:44.677 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:19:44.677 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:19:44.678 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:19:44.680 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:19:44.680 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:19:44.680 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:19:44.682  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/messagecomment', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.messages', args=[{}]}
2021-08-03 13:19:44.682 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:19:44.682  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:19:44.683 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.MessageDao.findByParentIdNull    : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2021-08-03 13:19:44.683 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.MessageDao.findByParentIdNull    : ==> Parameters: -1(Long)
2021-08-03 13:19:44.685 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.MessageDao.findByParentIdNull    : <==      Total: 1
2021-08-03 13:19:44.686 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.MessageDao.findByParentIdNotNull   : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2021-08-03 13:19:44.686 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.MessageDao.findByParentIdNotNull   : ==> Parameters: 100(Long)
2021-08-03 13:19:44.686 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.MessageDao.findByParentIdNotNull   : <==      Total: 0
2021-08-03 13:19:44.687  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : message::messageList
2021-08-03 13:19:46.706  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/friends', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.FriendsShowController.friends', args=[{}]}
2021-08-03 13:19:46.709 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc 
2021-08-03 13:19:46.710 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 
2021-08-03 13:19:46.711 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 13:19:46.711  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : friends
2021-08-03 13:19:46.755  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:19:46.755 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:19:46.755 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:19:46.756 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:19:46.756 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:19:46.756 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:19:46.757 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:19:46.757 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:19:46.757 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:19:46.758 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:19:46.759 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:19:46.759 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:19:46.761 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:19:46.761  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:19:50.190  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/picture', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.PictureShowController.friends', args=[{}]}
2021-08-03 13:19:50.192 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc 
2021-08-03 13:19:50.192 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.PictureDao.listPicture      : ==> Parameters: 
2021-08-03 13:19:50.193 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.PictureDao.listPicture      : <==      Total: 2
2021-08-03 13:19:50.193  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : picture
2021-08-03 13:19:50.261  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:19:50.262 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:19:50.262 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:19:50.264 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:19:50.265 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:19:50.265 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:19:50.266 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:19:50.266 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:19:50.266 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:19:50.268 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:19:50.268 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:19:50.268 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:19:50.269 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:19:50.269  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:19:52.657  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2021-08-03 13:19:52.657  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : about
2021-08-03 13:19:52.691  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:19:52.692 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:19:52.692 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:19:52.693 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:19:52.693 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:19:52.694 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:19:52.694 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:19:52.694 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:19:52.695 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:19:52.696 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:19:52.696 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:19:52.696 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:19:52.697 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:19:52.698  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:19:53.818  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 13:19:53.820 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 13:19:53.820 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 13:19:53.821 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 13:19:53.821 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 13:19:53.821 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 13:19:53.822 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 13:19:53.822 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 13:19:53.822 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 13:19:53.823 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 13:19:53.823  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index
2021-08-03 13:19:53.909  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:19:53.910 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:19:53.910 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:19:53.911 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:19:53.912 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:19:53.912 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:19:53.913 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:19:53.913 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:19:53.913 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:19:53.914 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:19:53.915 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:19:53.915 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:19:53.916 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:19:53.917  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:20:14.853  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 13:20:14.855 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 13:20:14.855 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 13:20:14.856 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 13:20:14.857 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 13:20:14.857 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 13:20:14.861 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 13:20:14.862 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 13:20:14.862 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 13:20:14.863 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 13:20:14.863  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index
2021-08-03 13:20:14.915  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:20:14.915 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:20:14.915 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:20:14.916 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:20:14.917 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:20:14.917 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:20:14.917 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:20:14.918 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:20:14.918 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:20:14.919 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:20:14.920 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:20:14.920 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:20:14.921 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:20:14.922  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:20:24.298  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 2, {}]}
2021-08-03 13:20:24.299 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 13:20:24.300 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 13:20:24.301 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 13:20:24.302 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ?, ? 
2021-08-03 13:20:24.302 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer), 3(Integer)
2021-08-03 13:20:24.303 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 1
2021-08-03 13:20:24.304 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 13:20:24.304 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 13:20:24.305 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 13:20:24.306  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index
2021-08-03 13:20:24.348  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:20:24.348 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:20:24.348 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:20:24.350 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:20:24.350 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:20:24.350 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:20:24.351 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:20:24.351 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:20:24.351 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:20:24.352 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:20:24.353 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:20:24.353 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:20:24.354 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:20:24.354  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:20:28.348  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 13:20:28.350 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 13:20:28.350 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 13:20:28.351 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 13:20:28.351 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 13:20:28.351 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 13:20:28.352 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 13:20:28.353 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 13:20:28.353 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 13:20:28.354 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 13:20:28.354  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index
2021-08-03 13:20:28.411  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:20:28.411 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:20:28.412 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:20:28.413 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:20:28.414 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:20:28.414 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:20:28.414 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:20:28.415 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:20:28.415 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:20:28.416 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:20:28.417 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:20:28.417 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:20:28.418 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:20:28.418  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:20:53.899  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 13:20:53.900 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 13:20:53.900 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 13:20:53.901 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 13:20:53.902 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 13:20:53.902 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 13:20:53.904 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 13:20:53.904  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : types
2021-08-03 13:20:54.042  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:20:54.042 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:20:54.043 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:20:54.044 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:20:54.044 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:20:54.044 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:20:54.045 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:20:54.045 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:20:54.045 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:20:54.046 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:20:54.047 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:20:54.047 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:20:54.048 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:20:54.049  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:15.260 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2021-08-03 13:22:15.261 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: zhaosi(String), 96e79218965eb72c92a549dd5a330112(String)
2021-08-03 13:22:15.262 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2021-08-03 13:22:15.294  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:15.294 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:15.294 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:15.295 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:15.296 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:15.296 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:15.296 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:15.296 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:15.296 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:15.297 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:15.298 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:15.298 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:15.299 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:15.299  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:16.553 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 13:22:16.553 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 13:22:16.555 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 13:22:16.555 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 13:22:16.555 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 13:22:16.556 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 13:22:16.588  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:16.588 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:16.588 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:16.589 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:16.590 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:16.590 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:16.591 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:16.591 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:16.591 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:16.592 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:16.593 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:16.593 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:16.595 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:16.595  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:18.662 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 13:22:18.662 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 13:22:18.663 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 13:22:18.664 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 13:22:18.664 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 13:22:18.665 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 13:22:18.666 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:22:18.666 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:22:18.667 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:22:18.697  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:18.697 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:18.697 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:18.698 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:18.699 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:18.699 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:18.699 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:18.700 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:18.700 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:18.701 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:18.701 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:18.701 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:18.703 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:18.703  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:19.238 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 13:22:19.238 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 13:22:19.239 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 13:22:19.240 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 13:22:19.240 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 13:22:19.240 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 13:22:19.272  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:19.272 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:19.272 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:19.273 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:19.274 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:19.274 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:19.274 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:19.275 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:19.275 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:19.276 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:19.276 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:19.276 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:19.278 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:19.278  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:19.833 DEBUG 23608 --- [http-nio-8080-exec-2] c.s.d.F.listFriendLink_COUNT             : ==>  Preparing: SELECT count(0) FROM myblog.t_friend 
2021-08-03 13:22:19.833 DEBUG 23608 --- [http-nio-8080-exec-2] c.s.d.F.listFriendLink_COUNT             : ==> Parameters: 
2021-08-03 13:22:19.835 DEBUG 23608 --- [http-nio-8080-exec-2] c.s.d.F.listFriendLink_COUNT             : <==      Total: 1
2021-08-03 13:22:19.835 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc LIMIT ? 
2021-08-03 13:22:19.835 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 10(Integer)
2021-08-03 13:22:19.836 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 13:22:19.873  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:19.875 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:19.875 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:19.875 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:19.875 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:19.875 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:19.876 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:19.876 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:19.876 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:19.877 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:19.877 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:19.877 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:19.878 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:19.879  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:20.287 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.PictureDao.listPicture_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_picture 
2021-08-03 13:22:20.288 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.PictureDao.listPicture_COUNT  : ==> Parameters: 
2021-08-03 13:22:20.289 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.PictureDao.listPicture_COUNT  : <==      Total: 1
2021-08-03 13:22:20.289 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc LIMIT ? 
2021-08-03 13:22:20.289 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.PictureDao.listPicture      : ==> Parameters: 10(Integer)
2021-08-03 13:22:20.290 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.PictureDao.listPicture      : <==      Total: 2
2021-08-03 13:22:20.322  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:20.322 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:20.322 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:20.323 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:20.324 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:20.324 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:20.324 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:20.324 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:20.324 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:20.326 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:20.326 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:20.326 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:20.327 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:20.327  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:21.890 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 13:22:21.890 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 13:22:21.890 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 13:22:21.891 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 13:22:21.891 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 13:22:21.892 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 13:22:21.893 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:22:21.893 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:22:21.893 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:22:21.924  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:21.926 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-03 13:22:21.926 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-03 13:22:21.927 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-03 13:22:21.928 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-03 13:22:21.928 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-03 13:22:22.003 ERROR 23608 --- [http-nio-8080-exec-6] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:94)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$8e926bb8.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-03 13:22:22.005  WARN 23608 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 13:22:23.358 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 13:22:23.358 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 13:22:23.359 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 13:22:23.360 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 13:22:23.360 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 13:22:23.361 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 13:22:23.393  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:23.393 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:23.393 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:23.394 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:23.395 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:23.395 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:23.395 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:23.395 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:23.395 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:23.396 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:23.397 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:23.397 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:23.398 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:23.398  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:26.640 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 13:22:26.640 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 13:22:26.641 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 13:22:26.642 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 13:22:26.642 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 13:22:26.643 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 13:22:26.644 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:22:26.644 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:22:26.644 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:22:26.675  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:26.676 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:26.676 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:26.677 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:26.677 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:26.677 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:26.678 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:26.678 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:26.678 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:26.679 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:26.679 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:26.679 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:26.681 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:26.681  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:28.128 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 13:22:28.128 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 13:22:28.130 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 13:22:28.130 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 13:22:28.130 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 13:22:28.131 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 13:22:28.166  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:28.167 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:28.167 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:28.168 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:28.168 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:28.168 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:28.169 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:28.169 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:28.169 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:28.170 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:28.171 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:28.171 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:28.172 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:28.172  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:29.642 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.F.listFriendLink_COUNT             : ==>  Preparing: SELECT count(0) FROM myblog.t_friend 
2021-08-03 13:22:29.642 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.F.listFriendLink_COUNT             : ==> Parameters: 
2021-08-03 13:22:29.643 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.F.listFriendLink_COUNT             : <==      Total: 1
2021-08-03 13:22:29.644 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc LIMIT ? 
2021-08-03 13:22:29.644 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 10(Integer)
2021-08-03 13:22:29.645 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 13:22:29.678  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:29.679 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:29.679 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:29.680 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:29.681 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:29.681 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:29.681 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:29.681 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:29.681 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:29.682 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:29.682 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:29.683 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:29.684 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:29.684  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:30.386 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.PictureDao.listPicture_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_picture 
2021-08-03 13:22:30.386 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.PictureDao.listPicture_COUNT  : ==> Parameters: 
2021-08-03 13:22:30.388 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.PictureDao.listPicture_COUNT  : <==      Total: 1
2021-08-03 13:22:30.388 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc LIMIT ? 
2021-08-03 13:22:30.388 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.PictureDao.listPicture      : ==> Parameters: 10(Integer)
2021-08-03 13:22:30.389 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.PictureDao.listPicture      : <==      Total: 2
2021-08-03 13:22:30.418  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:30.418 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:30.418 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:30.419 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:30.420 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:30.420 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:30.420 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:30.420 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:30.421 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:30.422 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:30.422 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:30.422 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:30.423 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:30.424  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:31.383 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 13:22:31.384 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 13:22:31.384 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 13:22:31.385 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 13:22:31.385 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 13:22:31.386 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 13:22:31.387 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:22:31.387 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:22:31.387 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:22:31.418  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:31.418 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:31.419 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:31.420 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:31.420 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:31.420 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:31.421 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:31.421 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:31.421 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:31.421 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:31.422 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:31.422 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:31.423 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:31.423  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:41.541 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 13:22:41.542 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 13:22:41.543 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 13:22:41.543 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 13:22:41.544 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 13:22:41.544 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 13:22:41.581  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:41.581 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:41.581 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:41.583 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:41.583 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:41.583 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:41.583 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:41.583 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:41.584 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:41.585 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:41.585 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:41.585 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:41.586 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:41.586  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:43.433 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 13:22:43.433 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 13:22:43.434 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 13:22:43.434 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 13:22:43.435 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 13:22:43.436 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 13:22:43.437 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:22:43.437 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:22:43.437 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:22:43.472  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:43.472 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:43.472 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:43.473 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:43.474 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:43.474 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:43.474 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:43.474 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:43.474 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:43.475 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:43.475 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:43.475 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:43.476 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:43.476  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:22:46.093 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:22:46.094 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:22:46.095 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:22:46.149  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:22:46.150 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:22:46.150 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:22:46.151 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:22:46.152 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:22:46.152 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:22:46.152 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:22:46.153 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:22:46.153 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:22:46.154 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:22:46.155 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:22:46.155 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:22:46.156 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:22:46.156  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:38:22.771 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 13:38:22.771 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 13:38:22.779 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 13:38:22.830  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:38:22.830 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:38:22.831 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:38:22.832 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:38:22.832 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:38:22.832 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:38:22.833 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:38:22.833 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:38:22.833 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:38:22.835 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:38:22.836 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:38:22.836 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:38:22.838 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:38:22.838  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:41:03.610 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 13:41:03.611 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 13:41:03.612 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 13:41:03.613 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 13:41:03.613 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 13:41:03.613 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 13:41:03.659  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:41:03.659 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:41:03.659 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:41:03.660 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:41:03.661 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:41:03.661 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:41:03.661 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:41:03.661 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:41:03.662 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:41:03.663 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:41:03.664 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:41:03.664 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:41:03.666 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:41:03.667  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:41:05.367  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:41:05.368 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:41:05.368 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:41:05.369 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:41:05.370 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:41:05.370 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:41:05.371 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:41:05.371 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:41:05.371 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:41:05.373 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:41:05.373 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:41:05.373 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:41:05.375 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:41:05.375  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:42:27.393 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.F.listFriendLink_COUNT             : ==>  Preparing: SELECT count(0) FROM myblog.t_friend 
2021-08-03 13:42:27.393 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.F.listFriendLink_COUNT             : ==> Parameters: 
2021-08-03 13:42:27.401 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.F.listFriendLink_COUNT             : <==      Total: 1
2021-08-03 13:42:27.402 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc LIMIT ? 
2021-08-03 13:42:27.402 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 10(Integer)
2021-08-03 13:42:27.402 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 13:42:27.442  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:42:27.442 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:42:27.442 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:42:27.443 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:42:27.444 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:42:27.444 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:42:27.444 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:42:27.444 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:42:27.444 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:42:27.445 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:42:27.446 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:42:27.446 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:42:27.446 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:42:27.447  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 13:42:28.936  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 13:42:28.937 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 13:42:28.937 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 13:42:28.938 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 13:42:28.938 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 13:42:28.938 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 13:42:28.939 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 13:42:28.939 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 13:42:28.939 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 13:42:28.940 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 13:42:28.940 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 13:42:28.940 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 13:42:28.941 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 13:42:28.941  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 14:01:15.425 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 14:01:15.425 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 14:01:15.427 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 14:01:15.427 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 14:01:15.428 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 14:01:15.428 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 14:01:15.429 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 14:01:15.429 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 14:01:15.430 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 14:01:15.484  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 14:01:15.484 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 14:01:15.484 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 14:01:15.486 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 14:01:15.486 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 14:01:15.486 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 14:01:15.486 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 14:01:15.486 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 14:01:15.487 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 14:01:15.488 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 14:01:15.488 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 14:01:15.488 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 14:01:15.489 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 14:01:15.489  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 14:14:53.877 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 14:14:53.878 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 14:14:53.878 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 14:14:53.932  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 14:14:53.933 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 14:14:53.933 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 14:14:53.934 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 14:14:53.934 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 14:14:53.934 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 14:14:53.935 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 14:14:53.935 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 14:14:53.935 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 14:14:53.936 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 14:14:53.937 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 14:14:53.937 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 14:14:53.938 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 14:14:53.938  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 14:22:14.557 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2021-08-03 14:22:14.558 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 62(Long)
2021-08-03 14:22:14.559 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2021-08-03 14:22:14.560 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 14:22:14.560 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 14:22:14.560 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 14:22:14.622  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 14:22:14.622 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 14:22:14.622 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 14:22:14.624 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 14:22:14.624 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 14:22:14.624 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 14:22:14.625 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 14:22:14.625 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 14:22:14.625 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 14:22:14.626 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 14:22:14.626 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 14:22:14.627 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 14:22:14.628 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 14:22:14.628  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 14:23:27.199 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.B.searchByTitleOrTypeOrRecommend   : ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.type_id,t.id,t.name from myblog.t_blog b ,myblog.t_type t WHERE b.type_id = t.id and b.type_id = ? and b.title like ? 
2021-08-03 14:23:27.200 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.B.searchByTitleOrTypeOrRecommend   : ==> Parameters: 58(Long), %%(String)
2021-08-03 14:23:27.201 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.d.B.searchByTitleOrTypeOrRecommend   : <==      Total: 0
2021-08-03 14:23:32.497 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 14:23:32.497 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 14:23:32.498 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 14:23:32.498 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 14:23:32.498 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 14:23:32.499 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 14:23:32.500 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 14:23:32.500 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 14:23:32.500 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 14:23:32.533  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 14:23:32.533 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 14:23:32.533 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 14:23:32.534 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 14:23:32.534 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 14:23:32.534 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 14:23:32.535 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 14:23:32.535 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 14:23:32.535 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 14:23:32.536 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 14:23:32.536 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 14:23:32.536 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 14:23:32.537 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 14:23:32.537  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 14:40:18.163 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 14:40:18.163 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 14:40:18.165 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 14:40:18.165 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 14:40:18.165 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 14:40:18.166 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 14:40:18.214  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 14:40:18.214 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 14:40:18.214 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 14:40:18.215 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 14:40:18.216 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 14:40:18.216 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 14:40:18.216 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 14:40:18.216 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 14:40:18.217 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 14:40:18.218 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 14:40:18.218 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 14:40:18.218 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 14:40:18.219 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 14:40:18.219  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 14:40:49.254 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 14:40:49.254 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 14:40:49.255 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 14:40:49.255 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 14:40:49.255 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 14:40:49.256 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 14:40:49.256 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 14:40:49.257 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 14:40:49.257 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 14:40:49.305  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 14:40:49.306 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 14:40:49.306 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 14:40:49.307 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 14:40:49.308 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 14:40:49.308 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 14:40:49.308 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 14:40:49.309 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 14:40:49.309 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 14:40:49.310 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 14:40:49.310 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 14:40:49.311 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 14:40:49.312 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 14:40:49.312  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 14:59:59.977 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 14:59:59.978 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 14:59:59.979 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:00:00.035  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:00:00.035 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:00:00.035 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:00:00.037 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:00:00.037 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:00:00.037 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:00:00.037 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:00:00.038 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:00:00.038 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:00:00.039 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:00:00.039 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:00:00.039 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:00:00.041 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:00:00.041  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:00:20.548 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 15:00:20.549 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 15:00:20.550 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 15:00:20.550 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 15:00:20.551 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 15:00:20.551 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 15:00:20.584  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:00:20.585 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:00:20.585 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:00:20.586 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:00:20.586 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:00:20.586 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:00:20.587 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:00:20.587 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:00:20.587 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:00:20.588 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:00:20.589 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:00:20.589 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:00:20.590 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:00:20.590  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:00:25.218 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 15:00:25.219 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 15:00:25.219 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 15:00:25.219 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 15:00:25.220 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 15:00:25.220 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 15:00:25.221 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:00:25.221 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:00:25.221 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:00:25.259  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:00:25.260 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:00:25.260 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:00:25.261 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:00:25.261 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:00:25.262 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:00:25.262 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:00:25.262 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:00:25.262 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:00:25.263 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:00:25.263 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:00:25.263 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:00:25.264 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:00:25.264  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:00:31.392  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 15:00:31.393 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 15:00:31.393 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 15:00:31.394 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 15:00:31.394 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 15:00:31.394 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 15:00:31.395 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 15:00:31.395 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 15:00:31.395 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 15:00:31.396 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 15:00:31.396  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index
2021-08-03 15:00:31.452  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:00:31.453 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:00:31.453 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:00:31.455 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:00:31.455 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:00:31.455 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:00:31.456 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:00:31.456 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:00:31.456 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:00:31.458 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:00:31.458 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:00:31.458 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:00:31.459 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:00:31.459  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:00:50.765 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2021-08-03 15:00:50.765 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: zhaosi(String), 96e79218965eb72c92a549dd5a330112(String)
2021-08-03 15:00:50.766 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2021-08-03 15:00:50.800  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:00:50.801 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:00:50.801 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:00:50.802 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:00:50.802 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:00:50.802 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:00:50.802 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:00:50.802 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:00:50.802 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:00:50.803 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:00:50.804 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:00:50.804 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:00:50.805 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:00:50.805  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:00:52.164 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 15:00:52.165 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 15:00:52.165 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 15:00:52.166 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 15:00:52.166 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 15:00:52.167 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 15:00:52.167 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:00:52.167 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:00:52.168 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:00:52.202  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:00:52.202 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:00:52.202 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:00:52.204 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:00:52.204 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:00:52.204 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:00:52.204 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:00:52.204 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:00:52.204 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:00:52.205 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:00:52.206 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:00:52.206 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:00:52.207 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:00:52.207  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:01:01.743 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2021-08-03 15:01:01.743 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 63(Long)
2021-08-03 15:01:01.744 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2021-08-03 15:01:01.744 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:01:01.744 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:01:01.746 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:01:01.788  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:01:01.788 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:01:01.788 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:01:01.789 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:01:01.790 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:01:01.790 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:01:01.790 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:01:01.790 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:01:01.791 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:01:01.791 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:01:01.792 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:01:01.792 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:01:01.793 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:01:01.793  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:01:48.556  WARN 23608 --- [http-nio-8080-exec-10] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2021-08-03 15:01:48.605 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2021-08-03 15:01:48.608 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), (String), 零信任发展历程及任子行零信任架构理念(String), 近年来，云计算、AI、大数据等技术引发的技术革命悄然而至。它们改变了企业业务方式、程序开发方式，也让企业安全边界发生了变化。传统安全思维，大多数企业组织及IT部门都注重边界安全防护，认为外网是不安全的，内网是安全的。但是随着员工移动办公工具增多，远程办公需求增加、以及业务上云、数据上云，网络边界模糊，内部员工、业务合作伙伴甚至供应商都可以访问企业数据，传统的安全边界不再存在。

零信任安全最早由约翰.金德维格（John Kindervag）在2010年提出，约翰.金德维格当时是著名研究机构Forrester的首席分析师。如今8年过去了，零信任安全已逐步被业界所认可，各组织机构的CIO、CISO们也言必称零信任了，特别是2017年Google基于零信任构建的BeyondCorp项目成功完成，零信任俨然已成为安全界的新宠。

2019年-2020年，因为新冠疫情的全球性爆发，企业对于复工复产阶段的原厂办公，居家办公需求暴涨，而基于安全边界防护的架构遇到前所未有的挑战，零信任安全架构体系被推上了神坛。

零信任是一种安全架构理念。“永不信任、始终认证”作为其指导原则，围绕着用户安全，设备安全，风险和信任的持续评估、访问控制的动态调整等技术手段落地实施。

企业安全防护在落地零信任时，要从“身份”、“认证”、“权限”、“动态”、“访问控制”这几个方面分步实施推进。其中，任子行作为典型的科技型企业，在全国拥有30多个分支机构，1000余名员工，大部分员工都是采用VPN远程访问企业内部资源，疫情期间传统VPN暴露的各种问题，让企业安全受到严峻挑战。

作为国内首批上市的网络安全公司，任子行立即组织公司的研发资源结合深厚的技术积累，参考谷歌beyondcorp零信任落地经验，以SDP为安全技术框架为基础迅速开发出了基于零信任的安全原厂办公解决方案来满足公司复工复产的需求。

任子行零信任安全防护解决方案，采用SDP的技术模型，以企业专用安全浏览器的方式将认证客户端与Web应用整合，在实现零信任核心安全理念的同时又为用户带来了方便快捷的使用体验。相较于谷歌公司从基本的网络环境构建的重资本投入，任子行零信任安全防护解决方案在不改变企业原有的网络安全架构部署的前提下，实施的“轻量级”方案。

部署方式更加灵活，任子行零信任安全解决方案支持旁路部署。如：在DMZ区域进行一旁路部署，不改变企业已有的网络结构，使企业原有的远程访问不冲突进行平滑过渡切换。基于B/S或者C/S架构的应用发布不需要在服务器上安装任何管理控件，零信任安全网关支持虚拟化部署，支持软硬一体。综合安全管控平台支持SaaS模式和本地化部署两种模式方便企业根据自身网络环境和业务发展需求做个性化定制。便于大多数企业快速、高效、更低成本的落地零信任安全模型，使得“零信任”应用访问成为企业安全防护架构中最基础的防护设施。
————————————————
版权声明：本文为CSDN博主「小小蔬菜不寂寞」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/beetxia/article/details/107868622(String), 67(Long), https://img-blog.csdnimg.cn/20201115101516307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p6aDEyMzY2Ng==,size_16,color_FFFFFF,t_70(String), 零信任的简单介绍(String), true(Boolean), false(Boolean), false(Boolean), true(Boolean), 2021-08-03 15:01:48.605(Timestamp), 63(Long)
2021-08-03 15:01:48.613 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2021-08-03 15:01:48.619 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 15:01:48.620 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 15:01:48.620 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 15:01:48.621 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 15:01:48.621 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 15:01:48.622 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 15:01:48.622 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:01:48.623 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:01:48.623 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:01:48.662  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:01:48.662 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:01:48.663 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:01:48.664 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:01:48.664 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:01:48.664 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:01:48.665 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:01:48.665 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:01:48.665 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:01:48.666 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:01:48.666 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:01:48.666 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:01:48.667 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:01:48.667  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:01:54.592 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2021-08-03 15:01:54.592 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 63(Long)
2021-08-03 15:01:54.593 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2021-08-03 15:01:54.593 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:01:54.593 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:01:54.594 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:01:54.649  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:01:54.649 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:01:54.649 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:01:54.650 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:01:54.650 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:01:54.650 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:01:54.651 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:01:54.651 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:01:54.651 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:01:54.653 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:01:54.653 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:01:54.653 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:01:54.655 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:01:54.655  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:01:57.163  WARN 23608 --- [http-nio-8080-exec-9] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2021-08-03 15:01:57.164 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2021-08-03 15:01:57.165 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateBlog          : ==> Parameters: true(Boolean), (String), 零信任发展历程及任子行零信任架构理念(String), 近年来，云计算、AI、大数据等技术引发的技术革命悄然而至。它们改变了企业业务方式、程序开发方式，也让企业安全边界发生了变化。传统安全思维，大多数企业组织及IT部门都注重边界安全防护，认为外网是不安全的，内网是安全的。但是随着员工移动办公工具增多，远程办公需求增加、以及业务上云、数据上云，网络边界模糊，内部员工、业务合作伙伴甚至供应商都可以访问企业数据，传统的安全边界不再存在。

零信任安全最早由约翰.金德维格（John Kindervag）在2010年提出，约翰.金德维格当时是著名研究机构Forrester的首席分析师。如今8年过去了，零信任安全已逐步被业界所认可，各组织机构的CIO、CISO们也言必称零信任了，特别是2017年Google基于零信任构建的BeyondCorp项目成功完成，零信任俨然已成为安全界的新宠。

2019年-2020年，因为新冠疫情的全球性爆发，企业对于复工复产阶段的原厂办公，居家办公需求暴涨，而基于安全边界防护的架构遇到前所未有的挑战，零信任安全架构体系被推上了神坛。

零信任是一种安全架构理念。“永不信任、始终认证”作为其指导原则，围绕着用户安全，设备安全，风险和信任的持续评估、访问控制的动态调整等技术手段落地实施。

企业安全防护在落地零信任时，要从“身份”、“认证”、“权限”、“动态”、“访问控制”这几个方面分步实施推进。其中，任子行作为典型的科技型企业，在全国拥有30多个分支机构，1000余名员工，大部分员工都是采用VPN远程访问企业内部资源，疫情期间传统VPN暴露的各种问题，让企业安全受到严峻挑战。

作为国内首批上市的网络安全公司，任子行立即组织公司的研发资源结合深厚的技术积累，参考谷歌beyondcorp零信任落地经验，以SDP为安全技术框架为基础迅速开发出了基于零信任的安全原厂办公解决方案来满足公司复工复产的需求。

任子行零信任安全防护解决方案，采用SDP的技术模型，以企业专用安全浏览器的方式将认证客户端与Web应用整合，在实现零信任核心安全理念的同时又为用户带来了方便快捷的使用体验。相较于谷歌公司从基本的网络环境构建的重资本投入，任子行零信任安全防护解决方案在不改变企业原有的网络安全架构部署的前提下，实施的“轻量级”方案。

部署方式更加灵活，任子行零信任安全解决方案支持旁路部署。如：在DMZ区域进行一旁路部署，不改变企业已有的网络结构，使企业原有的远程访问不冲突进行平滑过渡切换。基于B/S或者C/S架构的应用发布不需要在服务器上安装任何管理控件，零信任安全网关支持虚拟化部署，支持软硬一体。综合安全管控平台支持SaaS模式和本地化部署两种模式方便企业根据自身网络环境和业务发展需求做个性化定制。便于大多数企业快速、高效、更低成本的落地零信任安全模型，使得“零信任”应用访问成为企业安全防护架构中最基础的防护设施。
————————————————
版权声明：本文为CSDN博主「小小蔬菜不寂寞」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/beetxia/article/details/107868622(String), 67(Long), https://img-blog.csdnimg.cn/20201115101516307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p6aDEyMzY2Ng==,size_16,color_FFFFFF,t_70(String), 零信任的简单介绍(String), true(Boolean), false(Boolean), false(Boolean), true(Boolean), 2021-08-03 15:01:57.164(Timestamp), 63(Long)
2021-08-03 15:01:57.174 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2021-08-03 15:01:57.177 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 15:01:57.177 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 15:01:57.177 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 15:01:57.178 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 15:01:57.178 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 15:01:57.179 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 15:01:57.179 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:01:57.179 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:01:57.180 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:01:57.221  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:01:57.221 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:01:57.221 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:01:57.223 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:01:57.223 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:01:57.223 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:01:57.224 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:01:57.224 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:01:57.224 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:01:57.225 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:01:57.225 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:01:57.225 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:01:57.226 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:01:57.226  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:02:06.095  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 15:02:06.096 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 15:02:06.096 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 15:02:06.097 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 15:02:06.097 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 15:02:06.097 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 15:02:06.098 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 15:02:06.099 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 15:02:06.099 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 15:02:06.099 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 15:02:06.099  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index
2021-08-03 15:02:06.146  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:02:06.146 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:02:06.146 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:02:06.148 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:02:06.148 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:02:06.148 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:02:06.149 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:02:06.149 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:02:06.149 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:02:06.150 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:02:06.150 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:02:06.150 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:02:06.151 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:02:06.151  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:02:13.057  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 2, {}]}
2021-08-03 15:02:13.058 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 15:02:13.058 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 15:02:13.059 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 15:02:13.059 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ?, ? 
2021-08-03 15:02:13.059 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer), 3(Integer)
2021-08-03 15:02:13.061 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 1
2021-08-03 15:02:13.061 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 15:02:13.061 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 15:02:13.062 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 15:02:13.062  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index
2021-08-03 15:02:13.099  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:02:13.099 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:02:13.099 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:02:13.100 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:02:13.100 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:02:13.100 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:02:13.101 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:02:13.101 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:02:13.101 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:02:13.102 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:02:13.102 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:02:13.102 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:02:13.104 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:02:13.104  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:02:49.555 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2021-08-03 15:02:49.556 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: zhaosi(String), 96e79218965eb72c92a549dd5a330112(String)
2021-08-03 15:02:49.556 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2021-08-03 15:02:49.591  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:02:49.592 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:02:49.592 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:02:49.593 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:02:49.593 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:02:49.593 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:02:49.593 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:02:49.593 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:02:49.593 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:02:49.594 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:02:49.594 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:02:49.594 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:02:49.595 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:02:49.595  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:02:50.803 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 15:02:50.803 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 15:02:50.804 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 15:02:50.805 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 15:02:50.805 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 15:02:50.806 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 15:02:50.838  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:02:50.839 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:02:50.839 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:02:50.840 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:02:50.840 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:02:50.840 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:02:50.840 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:02:50.841 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:02:50.841 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:02:50.841 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:02:50.842 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:02:50.842 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:02:50.842 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:02:50.843  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:02:51.319 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 15:02:51.319 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 15:02:51.320 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 15:02:51.321 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 15:02:51.321 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 15:02:51.322 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 15:02:51.322 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:02:51.322 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:02:51.323 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:02:51.354  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:02:51.354 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:02:51.354 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:02:51.355 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:02:51.355 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:02:51.355 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:02:51.356 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:02:51.356 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:02:51.356 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:02:51.357 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:02:51.357 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:02:51.357 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:02:51.358 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:02:51.358  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:02:54.199 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2021-08-03 15:02:54.199 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 62(Long)
2021-08-03 15:02:54.199 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2021-08-03 15:02:54.200 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:02:54.200 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:02:54.200 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:02:54.258  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:02:54.258 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:02:54.258 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:02:54.259 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:02:54.260 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:02:54.260 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:02:54.260 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:02:54.260 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:02:54.260 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:02:54.262 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:02:54.262 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:02:54.262 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:02:54.264 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:02:54.264  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:02:58.572  WARN 23608 --- [http-nio-8080-exec-7] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2021-08-03 15:02:58.573 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2021-08-03 15:02:58.573 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : ==> Parameters: true(Boolean), (String), 区块链的介绍(String), 起源 语音
区块链起源于比特币，2008年11月1日，一位自称中本聪(Satoshi Nakamoto)的人发表了《比特币:一种点对点的电子现金系统》一文 [4]  ，阐述了基于P2P网络技术、加密技术、时间戳技术、区块链技术等的电子现金系统的构架理念，这标志着比特币的诞生。两个月后理论步入实践，2009年1月3日第一个序号为0的创世区块诞生。几天后2009年1月9日出现序号为1的区块，并与序号为0的创世区块相连接形成了链，标志着区块链的诞生 [5]  。
近年来，世界对比特币的态度起起落落，但作为比特币底层技术之一的区块链技术日益受到重视。在比特币形成过程中，区块是一个一个的存储单元，记录了一定时间内各个区块节点全部的交流信息。各个区块之间通过随机散列(也称哈希算法)实现链接，后一个区块包含前一个区块的哈希值，随着信息交流的扩大，一个区块与一个区块相继接续，形成的结果就叫区块链 [6]  。
概念定义 语音
什么是区块链？从科技层面来看，区块链涉及数学、密码学、互联网和计算机编程等很多科学技术问题。从应用视角来看，简单来说，区块链是一个分布式的共享账本和数据库，具有去中心化、不可篡改、全程留痕、可以追溯、集体维护、公开透明等特点。这些特点保证了区块链的“诚实”与“透明”，为区块链创造信任奠定基础。而区块链丰富的应用场景，基本上都基于区块链能够解决信息不对称问题，实现多个主体之间的协作信任与一致行动 [7]  。
区块链是分布式数据存储、点对点传输、共识机制、加密算法等计算机技术的新型应用模式。区块链（Blockchain），是比特币的一个重要概念，它本质上是一个去中心化的数据库，同时作为比特币的底层技术，是一串使用密码学方法相关联产生的数据块，每一个数据块中包含了一批次比特币网络交易的信息，用于验证其信息的有效性（防伪）和生成下一个区块 [8]  。
比特币白皮书英文原版 [4]  其实并未出现 blockchain 一词，而是使用的 chain of blocks。最早的比特币白皮书中文翻译版 [9]  中，将 chain of blocks 翻译成了区块链。这是“区块链”这一中文词最早的出现时间。
国家互联网信息办公室2019年1月10日发布《区块链信息服务管理规定》，自2019年2月15日起施行 [1]  。
作为核心技术自主创新的重要突破口，区块链的安全风险问题被视为当前制约行业健康发展的一大短板，频频发生的安全事件为业界敲响警钟。拥抱区块链，需要加快探索建立适应区块链技术机制的安全保障体系。 [10] 
发展历程 语音

2008年由中本聪第一次提出了区块链的概念 [4]  ，在随后的几年中，区块链成为了电子货币比特币的核心组成部分：作为所有交易的公共账簿。通过利用点对点网络和分布式时间戳服务器，区块链数据库能够进行自主管理。为比特币而发明的区块链使它成为第一个解决重复消费问题的数字货币。比特币的设计已经成为其他应用程序的灵感来源。
2014年，"区块链2.0”成为一个关于去中心化区块链数据库的术语。对这个第二代可编程区块链，经济学家们认为它是一种编程语言，可以允许用户写出更精密和智能的协议 [11]  。因此，当利润达到一定程度的时候，就能够从完成的货运订单或者共享证书的分红中获得收益。区块链2.0技术跳过了交易和“价值交换中担任金钱和信息仲裁的中介机构”。它们被用来使人们远离全球化经济，使隐私得到保护，使人们“将掌握的信息兑换成货币”，并且有能力保证知识产权的所有者得到收益。第二代区块链技术使存储个人的“永久数字ID和形象”成为可能，并且对“潜在的社会财富分配”不平等提供解决方案 [12]  。
2016年1月20日，中国人民银行数字货币研讨会宣布对数字货币研究取得阶段性成果。会议肯定了数字货币在降低传统货币发行等方面的价值，并表示央行在探索发行数字货币。中国人民银行数字货币研讨会的表达大大增强了数字货币行业信心。这是继2013年12月5日央行五部委发布关于防范比特币风险的通知之后，第一次对数字货币表示明确的态度。 [13] 
2016年12月20日，数字货币联盟——中国FinTech数字货币联盟及FinTech研究院正式筹建 [14]  。
如今，比特币仍是数字货币的绝对主流，数字货币呈现了百花齐放的状态，常见的有bitcoin、litecoin、dogecoin、dashcoin，除了货币的应用之外，还有各种衍生应用，如以太坊Ethereum、Asch等底层应用开发平台以及NXT，SIA，比特股，MaidSafe，Ripple等行业应用 [15]  。
类型 语音
公有区块链
公有区块链（Public Block Chains)是指：世界上任何个体或者团体都可以发送交易，且交易能够获得该区块链的有效确认，任何人都可以参与其共识过程。公有区块链是最早的区块链，也是应用最广泛的区块链，各大bitcoins系列的虚拟数字货币均基于公有区块链，世界上有且仅有一条该币种对应的区块链 [16]  。
联合（行业）区块链
行业区块链（Consortium Block Chains)：由某个群体内部指定多个预选的节点为记账人，每个块的生成由所有的预选节点共同决定（预选节点参与共识过程），其他接入节点可以参与交易，但不过问记账过程(本质上还是托管记账，只是变成分布式记账，预选节点的多少，如何决定每个块的记账者成为该区块链的主要风险点），其他任何人可以通过该区块链开放的API进行限定查询 [16]  。
私有区块链
私有区块链（Private Block Chains)：仅仅使用区块链的总账技术进行记账，可以是一个公司，也可以是个人，独享该区块链的写入权限，本链与其他的分布式存储方案没有太大区别。传统金融都是想实验尝试私有区块链，而公链的应用例如bitcoin已经工业化，私链的应用产品还在摸索当中 [16]  。
特征 语音
去中心化。区块链技术不依赖额外的第三方管理机构或硬件设施，没有中心管制，除了自成一体的区块链本身，通过分布式核算和存储，各个节点实现了信息自我验证、传递和管理。去中心化是区块链最突出最本质的特征 [17]  。
开放性。区块链技术基础是开源的，除了交易各方的私有信息被加密外，区块链的数据对所有人开放，任何人都可以通过公开的接口查询区块链数据和开发相关应用，因此整个系统信息高度透明 [17]  。
独立性。基于协商一致的规范和协议(类似比特币采用的哈希算法等各种数学算法)，整个区块链系统不依赖其他第三方，所有节点能够在系统内自动安全地验证、交换数据，不需要任何人为的干预 [17]  。
安全性。只要不能掌控全部数据节点的51%，就无法肆意操控修改网络数据，这使区块链本身变得相对安全，避免了主观人为的数据变更 [17]  。
匿名性。除非有法律规范要求，单从技术上来讲，各区块节点的身份信息不需要公开或验证，信息传递可以匿名进行 [17]  。
架构模型 语音
区块链基础架构模型
区块链基础架构模型
一般说来，区块链系统由数据层、网络层、共识层、激励层、合约层和应用层组成 [15]  。
其中，数据层封装了底层数据区块以及相关的数据加密和时间戳等基础数据和基本算法；网络层则包括分布式组网机制、数据传播机制和数据验证机制等；共识层主要封装网络节点的各类共识算法；激励层将经济因素集成到区块链技术体系中来，主要包括经济激励的发行机制和分配机制等；合约层主要封装各类脚本、算法和智能合约，是区块链可编程特性的基础；应用层则封装了区块链的各种应用场景和案例。该模型中，基于时间戳的链式区块结构、分布式节点的共识机制、基于共识算力的经济激励和灵活可编程的智能合约是区块链技术最具代表性的创新点 [18]  。
核心技术 语音
分布式账本
分布式账本指的是交易记账由分布在不同地方的多个节点共同完成，而且每一个节点记录的是完整的账目，因此它们都可以参与监督交易合法性，同时也可以共同为其作证 [19]  。
跟传统的分布式存储有所不同，区块链的分布式存储的独特性主要体现在两个方面：一是区块链每个节点都按照块链式结构存储完整的数据，传统分布式存储一般是将数据按照一定的规则分成多份进行存储。二是区块链每个节点存储都是独立的、地位等同的，依靠共识机制保证存储的一致性，而传统分布式存储一般是通过中心节点往其他备份节点同步数据。没有任何一个节点可以单独记录账本数据，从而避免了单一记账人被控制或者被贿赂而记假账的可能性。也由记账节点足够多，理论上讲除非所有的节点被破坏，否则账目就不会丢失，从而保证了账目数据的安全性 [19]  。
非对称加密
存储在区块链上的交易信息是公开的，但是账户身份信息是高度加密的，只有在数据拥有者授权的情况下才能访问到，从而保证了数据的安全和个人的隐私 [20]  。
共识机制
共识机制就是所有记账节点之间怎么达成共识，去认定一个记录的有效性，这既是认定的手段，也是防止篡改的手段。区块链提出了四种不同的共识机制，适用于不同的应用场景，在效率和安全性之间取得平衡 [20]  。
区块链的共识机制具备“少数服从多数”以及“人人平等”的特点，其中“少数服从多数”并不完全指节点个数，也可以是计算能力、股权数或者其他的计算机可以比较的特征量。“人人平等”是当节点满足条件时，所有节点都有权优先提出共识结果、直接被其他节点认同后并最后有可能成为最终共识结果。以比特币为例，采用的是工作量证明，只有在控制了全网超过51%的记账节点的情况下，才有可能伪造出一条不存在的记录。当加入区块链的节点足够多的时候，这基本上不可能，从而杜绝了造假的可能 [20]  。
智能合约
智能合约是基于这些可信的不可篡改的数据，可以自动化的执行一些预先定义好的规则和条款。以保险为例，如果说每个人的信息（包括医疗信息和风险发生的信息）都是真实可信的，那就很容易的在一些标准化的保险产品中，去进行自动化的理赔。在保险公司的日常业务中，虽然交易不像银行和证券行业那样频繁，但是对可信数据的依赖是有增无减。因此，笔者认为利用区块链技术，从数据管理的角度切入，能够有效地帮助保险公司提高风险管理能力。具体来讲主要分投保人风险管理和保险公司的风险监督 [20]  。(String), 60(Long), https://img-blog.csdnimg.cn/20190726202951657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N1cGVyX21lc3R0,size_16,color_FFFFFF,t_70(String), 区块链起源于比特币，2008年11月1日，一位自称中本聪(Satoshi Nakamoto)的人发表了《比特币:一种点对点的电子现金系统》一文 (String), false(Boolean), false(Boolean), false(Boolean), false(Boolean), 2021-08-03 15:02:58.572(Timestamp), 62(Long)
2021-08-03 15:02:58.578 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2021-08-03 15:02:58.581 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 15:02:58.581 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 15:02:58.581 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 15:02:58.582 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 15:02:58.582 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 15:02:58.582 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 15:02:58.583 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:02:58.583 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:02:58.584 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:02:58.626  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:02:58.626 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:02:58.626 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:02:58.627 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:02:58.627 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:02:58.628 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:02:58.628 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:02:58.628 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:02:58.628 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:02:58.629 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:02:58.629 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:02:58.629 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:02:58.630 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:02:58.630  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:03:01.515 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2021-08-03 15:03:01.515 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2021-08-03 15:03:01.516 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2021-08-03 15:03:01.517 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id asc LIMIT ? 
2021-08-03 15:03:01.517 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2021-08-03 15:03:01.518 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 10
2021-08-03 15:03:01.550  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:03:01.551 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:03:01.551 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:03:01.552 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:03:01.552 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:03:01.552 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:03:01.553 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:03:01.553 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:03:01.553 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:03:01.554 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:03:01.554 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:03:01.554 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:03:01.555 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:03:01.555  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:03:02.661 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.d.F.listFriendLink_COUNT             : ==>  Preparing: SELECT count(0) FROM myblog.t_friend 
2021-08-03 15:03:02.661 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.d.F.listFriendLink_COUNT             : ==> Parameters: 
2021-08-03 15:03:02.663 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.d.F.listFriendLink_COUNT             : <==      Total: 1
2021-08-03 15:03:02.663 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time desc LIMIT ? 
2021-08-03 15:03:02.663 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 10(Integer)
2021-08-03 15:03:02.664 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 2
2021-08-03 15:03:02.700  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:03:02.701 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:03:02.701 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:03:02.702 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:03:02.702 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:03:02.703 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:03:02.703 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:03:02.703 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:03:02.703 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:03:02.704 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:03:02.704 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:03:02.704 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:03:02.705 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:03:02.706  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:03:04.105 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 15:03:04.105 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 15:03:04.106 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 15:03:04.107 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time asc LIMIT ? 
2021-08-03 15:03:04.107 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2021-08-03 15:03:04.108 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 15:03:04.108 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2021-08-03 15:03:04.108 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2021-08-03 15:03:04.109 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 14
2021-08-03 15:03:04.148  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:03:04.149 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:03:04.149 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:03:04.150 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:03:04.150 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:03:04.150 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:03:04.151 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:03:04.151 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:03:04.151 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:03:04.152 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:03:04.152 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:03:04.152 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:03:04.153 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:03:04.153  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:03:10.687  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 15:03:10.688 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 15:03:10.689 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 15:03:10.689 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 15:03:10.690 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 15:03:10.690 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 15:03:10.691 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 15:03:10.691 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 15:03:10.691 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 15:03:10.692 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 15:03:10.692  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index
2021-08-03 15:03:10.731  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:03:10.732 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:03:10.732 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:03:10.733 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:03:10.733 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:03:10.733 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:03:10.734 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:03:10.734 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:03:10.734 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:03:10.735 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:03:10.735 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:03:10.735 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:03:10.736 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:03:10.736  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:07:31.262  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[63, {}]}
2021-08-03 15:07:31.262 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2021-08-03 15:07:31.262 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 63(Long)
2021-08-03 15:07:31.263 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2021-08-03 15:07:31.264 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2021-08-03 15:07:31.265 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==> Parameters: 63(Long)
2021-08-03 15:07:31.267 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2021-08-03 15:07:31.268 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2021-08-03 15:07:31.268 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 63(Long), 63(Long), 63(Long)
2021-08-03 15:07:31.270 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2021-08-03 15:07:31.270 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 15:07:31.270 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-03 15:07:31.271 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-03 15:07:31.272 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 15:07:31.272 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-03 15:07:31.273 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-03 15:07:31.273 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 15:07:31.273 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-03 15:07:31.273 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-03 15:07:31.274 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 15:07:31.274 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-03 15:07:31.274 DEBUG 23608 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-03 15:07:31.274  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog
2021-08-03 15:07:31.504  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:07:31.504 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:07:31.504 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:07:31.505 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:07:31.505 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:07:31.506 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:07:31.506 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:07:31.506 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:07:31.506 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:07:31.507 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:07:31.507 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:07:31.507 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:07:31.508 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:07:31.508  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:07:31.683  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/63', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[63, {}]}
2021-08-03 15:07:31.683 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 15:07:31.683 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 63(Long), -1(Long)
2021-08-03 15:07:31.684 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 2
2021-08-03 15:07:31.684 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 15:07:31.684 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 29(Long)
2021-08-03 15:07:31.685 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 1
2021-08-03 15:07:31.685 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdAndReplayId          : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 15:07:31.685 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdAndReplayId          : ==> Parameters: 63(Long), 30(Long)
2021-08-03 15:07:31.686 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdAndReplayId          : <==      Total: 0
2021-08-03 15:07:31.686 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2021-08-03 15:07:31.686 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 63(Long), 28(Long)
2021-08-03 15:07:31.687 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2021-08-03 15:07:31.687  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog :: commentList
2021-08-03 15:11:13.128  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:11:13.128 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:13.129 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:13.137 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:13.138 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:13.138 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 15:11:13.139 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:11:13.139  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:13.182  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:13.182 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:13.182 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:13.183 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:13.183 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:13.183 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:13.184 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:13.184 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:13.184 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:13.186 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:13.186 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:13.186 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:13.188 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:13.188  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:18.445  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:11:18.446 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:18.446 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:18.447 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:18.448 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:18.448 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-03 15:11:18.449 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:11:18.449  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:18.511  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:18.512 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:18.512 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:18.515 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:18.515 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:18.516 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:18.516 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:18.517 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:18.517 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:18.518 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:18.519 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:18.519 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:18.520 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:18.521  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:19.533  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:11:19.533 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:19.533 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:19.534 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:19.535 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:19.535 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-03 15:11:19.535 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-03 15:11:19.536  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:19.571  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:19.571 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:19.571 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:19.572 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:19.572 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:19.572 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:19.572 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:19.572 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:19.572 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:19.573 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:19.574 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:19.574 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:19.574 DEBUG 23608 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:19.575  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:22.243  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/60', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 60, {}]}
2021-08-03 15:11:22.244 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:22.244 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:22.245 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:22.246 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:22.246 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 15:11:22.246 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:11:22.247  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:22.288  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:22.288 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:22.288 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:22.289 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:22.290 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:22.290 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:22.290 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:22.290 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:22.290 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:22.291 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:22.291 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:22.291 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:22.293 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:22.293  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:23.968  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:11:23.969 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:23.969 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:23.969 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:23.970 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:23.970 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-03 15:11:23.971 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:11:23.971  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:24.012  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:24.013 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-03 15:11:24.013 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-03 15:11:24.015 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-03 15:11:24.015 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-03 15:11:24.015 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-03 15:11:24.017 ERROR 23608 --- [http-nio-8080-exec-3] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:94)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$8e926bb8.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-03 15:11:24.018  WARN 23608 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:11:24.301  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:11:24.301 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:11:24.301 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:11:24.302 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:11:24.302 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:11:24.302 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:11:24.303 ERROR 23608 --- [http-nio-8080-exec-6] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2021-08-03 15:11:24.304  WARN 23608 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:11:28.045  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:11:28.045 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:28.045 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:28.046 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:28.047 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:28.047 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-03 15:11:28.048 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-03 15:11:28.048  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:28.100  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:28.100 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-03 15:11:28.100 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-03 15:11:28.103 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-03 15:11:28.104 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-03 15:11:28.105 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-03 15:11:28.106 ERROR 23608 --- [http-nio-8080-exec-10] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:94)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$8e926bb8.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-03 15:11:28.108  WARN 23608 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:11:30.004  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:11:30.005 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:30.005 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:30.005 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:30.006 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:30.006 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-03 15:11:30.007 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-03 15:11:30.007  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:30.044  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:30.045 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-03 15:11:30.045 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-03 15:11:30.046 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-03 15:11:30.046 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-03 15:11:30.047 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-03 15:11:30.047 ERROR 23608 --- [http-nio-8080-exec-7] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:94)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$8e926bb8.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-03 15:11:30.048  WARN 23608 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:11:31.074  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:11:31.075 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:31.075 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:31.076 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:31.076 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:31.076 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-03 15:11:31.077 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:11:31.077  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:31.130  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:31.131 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-03 15:11:31.131 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-03 15:11:31.134 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-03 15:11:31.135 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-03 15:11:31.135 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-03 15:11:31.141 ERROR 23608 --- [http-nio-8080-exec-4] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:94)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$8e926bb8.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-03 15:11:31.141  WARN 23608 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:11:32.062  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:11:32.063 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:32.063 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:32.064 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:32.064 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:32.064 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-03 15:11:32.065 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-03 15:11:32.065  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:32.116  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:32.117 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:32.117 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:32.119 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:32.120 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:32.120 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:32.121 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:32.121 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:32.121 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:32.123 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:32.123 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:32.123 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:32.125 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:32.126  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:44.890  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/60', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 60, {}]}
2021-08-03 15:11:44.891 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:11:44.891 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:11:44.891 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:11:44.892 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:11:44.892 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:11:44.893 ERROR 23608 --- [http-nio-8080-exec-8] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/60，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 93 common frames omitted

2021-08-03 15:11:44.893  WARN 23608 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:11:47.468  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 15:11:47.469 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 15:11:47.469 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 15:11:47.470 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 15:11:47.471 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 15:11:47.471 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 15:11:47.472 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 15:11:47.472 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 15:11:47.472 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 15:11:47.473 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 15:11:47.473  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index
2021-08-03 15:11:47.538  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:47.538 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:47.538 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:47.539 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:47.539 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:47.539 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:47.539 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:47.539 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:47.540 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:47.541 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:47.541 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:47.541 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:47.542 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:47.542  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:50.734  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:11:50.734 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:50.735 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:50.735 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:50.736 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:50.736 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 15:11:50.737 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:11:50.737  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:50.773  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:50.773 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:50.773 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:50.774 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:50.774 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:50.774 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:50.775 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:50.775 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:50.775 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:50.776 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:50.776 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:50.776 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:50.777 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:50.777  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:51.846  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:11:51.847 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:51.847 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:51.848 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:51.848 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:51.848 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-03 15:11:51.849 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:11:51.849  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:51.898  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:51.899 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:51.899 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:51.901 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:51.902 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:51.902 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:51.903 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:51.904 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:51.904 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:51.906 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:51.907 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:51.907 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:51.909 DEBUG 23608 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:51.909  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:52.540  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:11:52.540 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:52.541 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:52.541 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:52.541 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:52.541 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-03 15:11:52.542 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-03 15:11:52.542  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:52.594  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:52.595 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:52.595 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:52.598 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:52.598 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:52.598 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:52.599 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:52.599 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:52.599 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:52.601 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:52.602 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:52.602 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:52.604 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:52.604  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:53.217  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:11:53.218 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:53.218 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:53.218 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:53.219 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:53.219 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-03 15:11:53.219 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:11:53.219  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:53.260  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:53.260 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:11:53.260 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:11:53.261 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:11:53.261 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:11:53.262 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:11:53.262 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:11:53.262 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:11:53.262 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:11:53.263 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:11:53.264 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:11:53.264 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:11:53.265 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:11:53.265  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:11:53.567  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/60', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 60, {}]}
2021-08-03 15:11:53.567 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:11:53.567 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:11:53.568 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:11:53.569 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:11:53.569 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 15:11:53.569 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:11:53.570  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:11:53.605  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:11:53.605 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-03 15:11:53.605 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-03 15:11:53.607 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-03 15:11:53.607 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-03 15:11:53.607 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-03 15:11:53.608 ERROR 23608 --- [http-nio-8080-exec-4] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:94)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$8e926bb8.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-03 15:11:53.609  WARN 23608 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:12:55.597  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/60', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 60, {}]}
2021-08-03 15:12:55.598 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:12:55.599 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:12:55.599 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:12:55.599 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:12:55.599 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:12:55.600 ERROR 23608 --- [http-nio-8080-exec-1] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/60，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:12:55.601  WARN 23608 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:12:59.352  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/60', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 60, {}]}
2021-08-03 15:12:59.353 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:12:59.353 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:12:59.354 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:12:59.354 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:12:59.354 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:12:59.355 ERROR 23608 --- [http-nio-8080-exec-7] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/60，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:12:59.356  WARN 23608 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:13:03.149  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:13:03.150 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:13:03.150 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:13:03.150 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:13:03.151 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:13:03.151 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:13:03.152 ERROR 23608 --- [http-nio-8080-exec-3] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:13:03.152  WARN 23608 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:13:06.832  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 15:13:06.833 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 15:13:06.833 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 15:13:06.834 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 15:13:06.834 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 15:13:06.834 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 15:13:06.835 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 15:13:06.836 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 15:13:06.836 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 15:13:06.837 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 15:13:06.837  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index
2021-08-03 15:13:06.893  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:13:06.893 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:13:06.893 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:13:06.895 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:13:06.895 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:13:06.895 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:13:06.896 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:13:06.896 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:13:06.896 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:13:06.897 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:13:06.898 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:13:06.898 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:13:06.899 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:13:06.899  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:13:09.994  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:13:09.995 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:13:09.995 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:13:09.995 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:13:09.996 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:13:09.996 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:13:09.997 ERROR 23608 --- [http-nio-8080-exec-10] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/-1，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:13:09.998  WARN 23608 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:13:12.230  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:13:12.231 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:13:12.231 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:13:12.231 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:13:12.232 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:13:12.232 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 15:13:12.232 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:13:12.232  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:13:12.292  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:13:12.292 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:13:12.292 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:13:12.295 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:13:12.296 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:13:12.296 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:13:12.297 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:13:12.297 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:13:12.297 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:13:12.299 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:13:12.299 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:13:12.299 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:13:12.300 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:13:12.300  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:13:14.147  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:13:14.148 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:13:14.148 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:13:14.149 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:13:14.149 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:13:14.149 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:13:14.150 ERROR 23608 --- [http-nio-8080-exec-7] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/67，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:13:14.151  WARN 23608 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:13:29.889  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:13:29.889 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:13:29.889 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:13:29.890 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:13:29.890 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:13:29.890 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-03 15:13:29.891 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:13:29.891  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:13:29.940  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:13:29.941 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:13:29.941 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:13:29.942 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:13:29.942 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:13:29.942 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:13:29.943 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:13:29.943 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:13:29.943 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:13:29.944 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:13:29.944 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:13:29.944 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:13:29.945 DEBUG 23608 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:13:29.946  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:13:32.952  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:13:32.953 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:13:32.953 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:13:32.953 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:13:32.954 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:13:32.954 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:13:32.955 ERROR 23608 --- [http-nio-8080-exec-10] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:13:32.956  WARN 23608 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:13:34.299  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 15:13:34.300 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 15:13:34.300 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 15:13:34.301 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 15:13:34.301 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 15:13:34.301 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 15:13:34.302 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 15:13:34.302 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 15:13:34.302 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 15:13:34.303 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 15:13:34.303  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index
2021-08-03 15:13:34.358  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:13:34.358 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:13:34.358 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:13:34.360 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:13:34.360 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:13:34.360 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:13:34.361 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:13:34.361 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:13:34.361 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:13:34.362 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:13:34.363 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:13:34.363 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:13:34.364 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:13:34.364  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:13:49.612  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:13:49.612 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:13:49.613 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:13:49.613 DEBUG 23608 --- [http-nio-8080-exec-9] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:13:49.614 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:13:49.614 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:13:49.615 ERROR 23608 --- [http-nio-8080-exec-9] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/-1，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:13:49.616  WARN 23608 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:13:54.157  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 15:13:54.158 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 15:13:54.158 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 15:13:54.159 DEBUG 23608 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 15:13:54.159 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 15:13:54.159 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 15:13:54.160 DEBUG 23608 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 15:13:54.161 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 15:13:54.161 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 15:13:54.161 DEBUG 23608 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 15:13:54.161  INFO 23608 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index
2021-08-03 15:13:54.216  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:13:54.217 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:13:54.217 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:13:54.218 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:13:54.219 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:13:54.219 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:13:54.219 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:13:54.220 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:13:54.220 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:13:54.221 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:13:54.221 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:13:54.221 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:13:54.223 DEBUG 23608 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:13:54.223  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:13:55.893  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:13:55.894 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:13:55.894 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:13:55.894 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:13:55.895 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:13:55.895 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 15:13:55.896 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:13:55.896  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:13:55.934  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:13:55.934 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:13:55.934 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:13:55.935 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:13:55.935 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:13:55.935 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:13:55.936 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:13:55.936 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:13:55.936 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:13:55.936 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:13:55.937 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:13:55.937 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:13:55.938 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:13:55.938  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:13:57.356  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:13:57.356 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:13:57.356 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:13:57.357 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:13:57.357 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:13:57.357 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-03 15:13:57.358 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:13:57.359  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:13:57.410  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:13:57.410 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:13:57.411 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:13:57.413 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:13:57.413 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:13:57.413 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:13:57.414 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:13:57.415 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:13:57.415 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:13:57.416 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:13:57.417 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:13:57.417 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:13:57.419 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:13:57.419  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:13:58.510  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:13:58.513 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:13:58.513 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:13:58.514 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:13:58.514 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:13:58.514 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-03 15:13:58.515 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-03 15:13:58.515  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:13:58.560  INFO 23608 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:13:58.560 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-03 15:13:58.561 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-03 15:13:58.562 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-03 15:13:58.562 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-03 15:13:58.562 DEBUG 23608 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-03 15:13:58.564 ERROR 23608 --- [http-nio-8080-exec-2] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:94)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$8e926bb8.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-03 15:13:58.564  WARN 23608 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:15:02.232  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/60', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 60, {}]}
2021-08-03 15:15:02.232 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:15:02.232 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:15:02.233 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:15:02.234 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:15:02.234 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 15:15:02.235 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:15:02.235  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:15:02.278  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:15:02.278 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:15:02.279 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:15:02.280 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:15:02.280 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:15:02.280 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:15:02.280 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:15:02.280 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:15:02.280 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:15:02.281 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:15:02.281 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:15:02.281 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:15:02.282 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:15:02.283  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:31:46.744  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:31:46.746 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:31:46.746 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:31:46.747 DEBUG 23608 --- [http-nio-8080-exec-8] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:31:46.748 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:31:46.748 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:31:46.749 ERROR 23608 --- [http-nio-8080-exec-8] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/-1，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:31:46.750  WARN 23608 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:31:48.735  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:31:48.736 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:31:48.736 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:31:48.737 DEBUG 23608 --- [http-nio-8080-exec-5] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:31:48.737 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:31:48.737 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:31:48.738 ERROR 23608 --- [http-nio-8080-exec-5] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/-1，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:31:48.738  WARN 23608 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:31:53.182  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2021-08-03 15:31:53.183 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2021-08-03 15:31:53.183 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2021-08-03 15:31:53.184 DEBUG 23608 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2021-08-03 15:31:53.184 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2021-08-03 15:31:53.184 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 3(Integer)
2021-08-03 15:31:53.185 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 3
2021-08-03 15:31:53.185 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4; 
2021-08-03 15:31:53.186 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2021-08-03 15:31:53.186 DEBUG 23608 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 3
2021-08-03 15:31:53.186  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index
2021-08-03 15:31:53.240  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:31:53.241 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:31:53.242 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:31:53.243 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:31:53.243 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:31:53.243 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:31:53.244 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:31:53.244 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:31:53.244 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:31:53.246 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:31:53.246 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:31:53.246 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:31:53.248 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:31:53.248  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:31:56.228  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:31:56.228 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:31:56.229 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:31:56.229 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:31:56.230 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:31:56.230 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:31:56.231 ERROR 23608 --- [http-nio-8080-exec-6] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/-1，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:31:56.231  WARN 23608 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:32:02.073  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2021-08-03 15:32:02.074 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:32:02.074 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:32:02.074 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:32:02.075 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:32:02.075 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 60(Long)
2021-08-03 15:32:02.075 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:32:02.076  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:32:02.133  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:32:02.133 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:32:02.133 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:32:02.134 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:32:02.135 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:32:02.135 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:32:02.135 DEBUG 23608 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:32:02.135 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:32:02.135 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:32:02.137 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:32:02.137 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:32:02.137 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:32:02.139 DEBUG 23608 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:32:02.140  INFO 23608 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:32:04.303  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:32:04.304 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:32:04.304 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:32:04.305 DEBUG 23608 --- [http-nio-8080-exec-7] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:32:04.305 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:32:04.305 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:32:04.306 ERROR 23608 --- [http-nio-8080-exec-7] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/67，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:32:04.307  WARN 23608 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:32:06.623  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/67', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 67, {}]}
2021-08-03 15:32:06.623 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:32:06.624 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:32:06.624 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:32:06.624 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:32:06.625 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 67(Long)
2021-08-03 15:32:06.625 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2021-08-03 15:32:06.625  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:32:06.671  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:32:06.671 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:32:06.671 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:32:06.673 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:32:06.673 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:32:06.673 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:32:06.674 DEBUG 23608 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:32:06.674 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:32:06.674 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:32:06.676 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:32:06.676 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:32:06.676 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:32:06.677 DEBUG 23608 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:32:06.677  INFO 23608 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:32:07.954  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:32:07.955 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2021-08-03 15:32:07.955 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2021-08-03 15:32:07.955 DEBUG 23608 --- [http-nio-8080-exec-6] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2021-08-03 15:32:07.956 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ? 
2021-08-03 15:32:07.956 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2021-08-03 15:32:07.957 ERROR 23608 --- [http-nio-8080-exec-6] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/types/61，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy94.getAllTypeAndBlog(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy95.getAllTypeAndBlog(Unknown Source)
	at com.star.service.Impl.TypeServiceImpl.getAllTypeAndBlog(TypeServiceImpl.java:48)
	at com.star.service.Impl.TypeServiceImpl$$FastClassBySpringCGLIB$$599a4195.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.star.service.Impl.TypeServiceImpl$$EnhancerBySpringCGLIB$$49966648.getAllTypeAndBlog(<generated>)
	at com.star.controller.TypeShowController.types(TypeShowController.java:37)
	at com.star.controller.TypeShowController$$FastClassBySpringCGLIB$$d1cb58f6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.TypeShowController$$EnhancerBySpringCGLIB$$15766499.types(<generated>)
	at sun.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2021-08-03 15:32:07.958  WARN 23608 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\TypeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT t.id tid, t.name, b.id bid, b.title, b.type_id FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:32:09.422  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/61', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 61, {}]}
2021-08-03 15:32:09.423 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2021-08-03 15:32:09.423 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2021-08-03 15:32:09.424 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 4
2021-08-03 15:32:09.424 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description, t.name , u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2021-08-03 15:32:09.424 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 61(Long)
2021-08-03 15:32:09.425 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 2
2021-08-03 15:32:09.425  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : types
2021-08-03 15:32:09.475  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:32:09.475 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:32:09.476 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:32:09.478 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:32:09.478 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:32:09.479 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:32:09.479 DEBUG 23608 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:32:09.480 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:32:09.480 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:32:09.481 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:32:09.482 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:32:09.482 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:32:09.483 DEBUG 23608 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:32:09.483  INFO 23608 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2021-08-03 15:38:18.977  INFO 23608 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.ArchiveShowController.archive', args=[{}]}
2021-08-03 15:38:18.980 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2021-08-03 15:38:18.980 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2021-08-03 15:38:18.983 DEBUG 23608 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2021-08-03 15:38:18.984 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by desc LIMIT ? 
2021-08-03 15:38:18.985 DEBUG 23608 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10000(Integer)
2021-08-03 15:38:18.987 ERROR 23608 --- [http-nio-8080-exec-3] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/archives，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getAllBlogQuery(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor156.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getAllBlogQuery(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getAllBlog(BlogServiceImpl.java:36)
	at com.star.controller.ArchiveShowController.archive(ArchiveShowController.java:29)
	at com.star.controller.ArchiveShowController$$FastClassBySpringCGLIB$$1515a458.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.ArchiveShowController$$EnhancerBySpringCGLIB$$502673ff.archive(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 88 common frames omitted

2021-08-03 15:38:18.988  WARN 23608 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:38:21.483  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.ArchiveShowController.archive', args=[{}]}
2021-08-03 15:38:21.483 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from myblog.t_blog b left outer join myblog.t_type t on b.type_id = t.id order by b.update_time asc 
2021-08-03 15:38:21.483 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 
2021-08-03 15:38:21.485 DEBUG 23608 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 15:38:21.485  INFO 23608 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : archives
2021-08-03 15:38:21.536  INFO 23608 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:38:21.536 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2021-08-03 15:38:21.537 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2021-08-03 15:38:21.544 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2021-08-03 15:38:21.544 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ? 
2021-08-03 15:38:21.544 DEBUG 23608 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2021-08-03 15:38:21.546 ERROR 23608 --- [http-nio-8080-exec-8] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/footer/blogmessage，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:235)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy82.getBlogTotal(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy83.getBlogTotal(Unknown Source)
	at com.star.service.Impl.BlogServiceImpl.getBlogTotal(BlogServiceImpl.java:114)
	at com.star.controller.IndexController.blogMessage(IndexController.java:94)
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$8e926bb8.blogMessage(<generated>)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:177)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:104)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy116.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 86 common frames omitted

2021-08-03 15:38:21.547  WARN 23608 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
### The error may exist in file [E:\JavaProject\myblog-mybatis-master\target\classes\mapper\BlogDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT count(*) FROM myblog.t_blog order by desc LIMIT ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc LIMIT 10000' at line 1]
2021-08-03 15:38:29.288  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/archives', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.ArchiveShowController.archive', args=[{}]}
2021-08-03 15:38:29.289 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from myblog.t_blog b left outer join myblog.t_type t on b.type_id = t.id order by b.update_time asc 
2021-08-03 15:38:29.289 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 
2021-08-03 15:38:29.290 DEBUG 23608 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 4
2021-08-03 15:38:29.290  INFO 23608 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : archives
2021-08-03 15:38:29.339  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2021-08-03 15:38:29.339 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2021-08-03 15:38:29.339 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2021-08-03 15:38:29.341 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2021-08-03 15:38:29.341 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select sum(views) from myblog.t_blog 
2021-08-03 15:38:29.341 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2021-08-03 15:38:29.342 DEBUG 23608 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2021-08-03 15:38:29.342 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2021-08-03 15:38:29.342 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2021-08-03 15:38:29.343 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2021-08-03 15:38:29.344 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2021-08-03 15:38:29.344 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2021-08-03 15:38:29.345 DEBUG 23608 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2021-08-03 15:38:29.345  INFO 23608 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
